import{_ as n,o as s,c as a,b as t}from"./app.1e9a03a3.js";const p={},o=t(`<p>Ch\xE0o c\xE1c b\u1EA1n, r\u1EA5t vui v\xEC b\u1EA1n \u0111\xE3 \u0111\u1ECDc blog n\xE0y. H\xE3y \u0111\u1EC3 l\u1EA1i b\xECnh lu\u1EADn b\xEAn d\u01B0\u1EDBi nh\xE9 ^^</p><p>C\xF3 l\u1EBB b\u1EA1n \u0111\xE3 nhi\u1EC1u l\u1EA7n c\u1EA3m th\u1EA5y ch\xE1n n\u1EA3n b\u1EA5t l\u1EF1c v\xE0 \u0111\xF4i khi l\xE0 mu\u1ED1n ch\u1EEDi t\u1EE5c khi website tr\u01B0\u1EDDng b\u1ECB ch\u1EBFt! M\xECnh c\u0169ng v\u1EADy, nh\u1EEFng l\xFAc n\u1ED9p b\xE0i \u0111\xF4ng ho\u1EB7c \u0111\u0103ng k\xFD g\xEC \u0111\xF3 c\u1EA7n l\xEAn web tr\u01B0\u1EDDng th\xEC c\u1EE9 y nh\u01B0 r\u1EB1ng nh\u1EADn l\u1ED7i 502 (L\u1ED7i ph\u1EA3n h\u1ED3i t\xE0i nguy\xEAn kh\xF4ng th\xE0nh c\xF4ng hay n\xF3i r\xF5 ra l\xE0 web s\u1EADp).</p><p>N\u1EBFu l\xE0 m\u1ED9t <code>dev</code> ch\xFAng ta ph\u1EA3i l\xE0m g\xEC \u0111\xF3 h\u1EA1n ch\u1EBF \u0111i\u1EC1u n\xE0y!</p><p>V\u1EC1 c\u01A1 b\u1EA3n c\xF3 3 kh\u1EA3 n\u0103ng cao d\u1EABn \u0111\u1EBFn t\xECnh tr\u1EA1ng n\xE0y</p><ol><li>Qu\xE1 nhi\u1EC1u ng\u01B0\u1EDDi truy c\u1EADp v\xE0o h\u1EC7 th\u1ED1ng</li><li>M\u1EA1ng y\u1EBFu</li><li>L\u1ED7i 500 khi\u1EBFn m\u1ED9t s\u1ED1 server c\xF3 c\u01A1 ch\u1EBF t\u1EF1 start l\u1EA1i</li><li>M\u1ED9t client n\xE0o \u0111\xF3 g\u1EEDi y\xEAu c\u1EA7u li\xEAn t\u1EE5c v\xE0 server kh\xF4ng x\u1EED l\xFD k\u1ECBp</li></ol><p>Trong 4 s\u1EF1 c\u1ED1 tr\xEAn ph\u1EE5 thu\u1ED9c r\u1EA5t nhi\u1EC1u v\xE0o t\xE0i nguy\xEAn, d\u1ECBch v\u1EE5 deploy web, g\xF3i m\u1EA1ng ch\u1EA1y server,...</p><p>Ri\xEAng ch\u1EC9 c\xF3 \xFD s\u1ED1 <code>4</code> l\xE0 ta c\xF3 th\u1EC3 ki\u1EC3m so\xE1t ngay t\u1EA1i server!</p><p>X\u1EED l\xFD v\xE0 c\u1EA5u h\xECnh th\u1EBF n\xE0o th\xEC h\xE3y c\xF9ng m\xECnh t\xECm hi\u1EC3u ngay sau \u0111\xE2y nh\xE9! B\u1EADt m\xED l\xE0 ta s\u1EBD d\xF9ng c\u01A1 ch\u1EBF <code>cache</code></p><h2 id="su-chiu-tai-cua-server" tabindex="-1"><a class="header-anchor" href="#su-chiu-tai-cua-server" aria-hidden="true">#</a> S\u1EF1 ch\u1ECBu t\u1EA3i c\u1EE7a Server</h2><p>\u0110\u1EA7u ti\xEAn ta t\xECm hi\u1EC3u v\u1EC1 vi\u1EC7c ch\u1ECBu t\u1EA3i c\u1EE7a server \u0110\u1EC3 vi\u1EBFt ra m\u1ED9t con server ch\u1EA1y \u0111\u01B0\u1EE3c th\xEC qu\xE1 \u0111\u01A1n gi\u1EA3n, tuy nhi\xEAn vi\u1EC7c thi\u1EBFt k\u1EBF h\u1EC7 th\u1ED1ng th\u1EBF n\xE0o cho t\u1ED1i \u01B0u \u0111\u1EC3 t\u0103ng \u0111\u1ED9 ch\u1ECBu t\u1EA3i c\u1EE7a Server l\u1EA1i \u0111\u01B0\u1EE3c \xEDt ng\u01B0\u1EDDi quan t\xE2m. M\xECnh s\u1EBD c\xF3 m\u1ED9t th\u1ED1ng k\xEA nh\u1ECF d\u01B0\u1EDBi \u0111\xE2y:</p><ul><li>M\xECnh l\u1EA5y 3 server l\xE0m m\u1EABu <em>(ch\u1EC9 b\xE0n v\u1EC1 v\xED d\u1EE5 c\u01A1 b\u1EA3n nh\u01B0 Hello World)</em> v\u1EC1 m\u1EE9c \u0111\u1ED9 ch\u1ECBu t\u1EA3i c\u1EE7a <code>Bun.js</code>, <code>Node.js</code> v\xE0 <code>SpringBoot</code>.</li><li>Bi\u1EBFt c\xE1c th\xF4ng s\u1ED1 v\u1EC1 ph\u1EA7n c\u1EE9ng l\xE0 nh\u01B0 nhau v\xE0 test tr\xEAn 2 port tr\xEAn c\xF9ng m\u1ED9t m\xE1y.</li></ul><table><thead><tr><th>Server</th><th>Request/gi\xE2y</th><th>S\u1ED1 Request \u0111\u01B0\u1EE3c ch\u1EA1y t\u1ED1i \u0111a</th></tr></thead><tbody><tr><td><code>SpringBoot</code></td><td>23435</td><td>980273</td></tr><tr><td><code>Bun.js</code></td><td>50520</td><td>981573</td></tr><tr><td><code>Node.js</code></td><td>21081</td><td>973370</td></tr></tbody></table><blockquote><p>L\u01B0u \xFD: V\xED d\u1EE5 ch\u1EC9 mang t\xEDnh ch\u1EA5t tham kh\u1EA3o v\xEC c\xF2n ph\u1EE5 thu\u1ED9c v\xE0o r\u1EA5t nhi\u1EC1u y\u1EBFu t\u1ED1.</p></blockquote><h2 id="y-tuong" tabindex="-1"><a class="header-anchor" href="#y-tuong" aria-hidden="true">#</a> \xDD t\u01B0\u1EDFng</h2><p>Tr\xEAn internet s\u1EBD c\xF3 r\u1EA5t nhi\u1EC1u c\xE1ch \u0111\u1EC3 ki\u1EC3m so\xE1t vi\u1EC7c spam request. M\xECnh s\u1EBD n\u1EBFu ra c\xE1ch th\xF4ng d\u1EE5ng nh\u1EA5t.</p><p>Kh\xF4ng ch\u1EC9 th\xF4ng d\u1EE5ng, n\xF3 c\xF2n mang l\u1EA1i hi\u1EC7u qu\u1EA3 cao, m\xECnh \u0111\xE3 \xE1p d\u1EE5ng v\xE0o \u0110\u1ED3 \xE1n t\u1ED1t nghi\u1EC7p v\xE0 nh\u1EADn \u0111\u01B0\u1EE3c s\u1EF1 ph\u1EA3n h\u1ED3i r\u1EA5t t\xEDch c\u1EF1c t\u1EEB h\u1ED3i \u0111\u1ED3ng ch\u1EA5m b\xE0i n\xEAn m\xECnh s\u1EBD chia s\u1EBD nh\xE1.</p><p>V\u1EC1 c\u01A1 b\u1EA3n ch\xFAng ta s\u1EBD l\xE0m th\u1EBF n\xE0o \u0111\u1EC3 l\u01B0u l\u1EA1i \u0111\u01B0\u1EE3c IP c\u1EE7a thi\u1EBFt b\u1ECB g\u1EEDi Request l\u1EA7n \u0111\u1EA7u cho website c\u1EE7a ta v\xE0 ki\u1EC3m tra c\xE1c l\u1EA7n Request ti\u1EBFp theo. N\u1EBFu s\u1ED1 l\u01B0\u1EE3ng Request qu\xE1 nhi\u1EC1u th\xEC m\xECnh s\u1EBD ch\u1EB7n IP \u0111\xF3 l\u1EA1i v\xE0 kh\xF4ng cho Request n\u1EEFa!</p><p>V\u1EA5n \u0111\u1EC1 \u0111\u1EB7t ra l\xE0 l\xE0m sao \u0111\u1EC3 t\u1ED1c \u0111\u1ED9 ki\u1EC3m tra \u0111\xF3 ph\u1EA3i th\u1EADt nhanh \u0111\u1EC3 kh\xF4ng l\xE0m t\u1EC7 \u0111i tr\xE3i nghi\u1EC7m ng\u01B0\u1EDDi d\xF9ng v\xE0 ch\u1EADm \u0111\u1ED9 ph\u1EA3n h\u1ED3i c\u1EE7a m\u1ED7i Request?</p><blockquote><p>C\xE2u tr\u1EA3 l\u1EDDi l\xE0 d\xF9ng c\u01A1 ch\u1EBF Cache v\xE0 Redis</p></blockquote><h2 id="cac-khai-niem-co-ban" tabindex="-1"><a class="header-anchor" href="#cac-khai-niem-co-ban" aria-hidden="true">#</a> C\xE1c kh\xE1i ni\u1EC7m c\u01A1 b\u1EA3n</h2><h3 id="cache-la-gi" tabindex="-1"><a class="header-anchor" href="#cache-la-gi" aria-hidden="true">#</a> Cache l\xE0 g\xEC</h3><p>Cache l\xE0 g\xEC: Cache l\xE0 m\u1ED9t k\u1EF9 thu\u1EADt l\u01B0u tr\u1EEF b\u1EA3n sao d\u1EEF li\u1EC7u \u0111\xE3 x\u1EED l\xFD tr\u01B0\u1EDBc \u0111\xF3 \u0111\u1EC3 gi\u1EA3m th\u1EDDi gian truy c\u1EADp v\xE0 t\u0103ng t\u1ED1c \u0111\u1ED9 x\u1EED l\xFD.</p><p>V\xED d\u1EE5 th\u1EF1c t\u1EBF: Trong tr\xECnh duy\u1EC7t web, cache gi\u1EEF l\u1EA1i h\xECnh \u1EA3nh v\xE0 CSS tr\u01B0\u1EDBc \u0111\xF3 \u0111\u1EC3 tr\xE1nh vi\u1EC7c t\u1EA3i l\u1EA1i t\u1EEB m\xE1y ch\u1EE7, gi\xFAp gi\u1EA3m th\u1EDDi gian t\u1EA3i trang.</p><blockquote><p>\xC0 v\u1EADy ra ch\xFAng ta v\u1EABn ng\u1EA7m s\u1EED d\u1EE5ng c\u01A1 ch\u1EBF <code>Cache</code> m\xE0 kh\xF4ng h\u1EC1 hay bi\u1EBFt!</p></blockquote><p>V\u1EDBi <code>Cache</code> ta c\xF3 th\u1EC3 d\u1EC5 d\xE0ng ghi \u0111\xE8 d\u1EEF li\u1EC7u l\xEAn nhau m\u1ED9t c\xE1ch d\u1EC5 d\xE0ng.</p><p>Ta ch\u1EC9 c\u1EA7n t\u1EA1o ra m\u1ED9t Object l\u01B0u l\u1EA1i c\xE1c th\xF4ng tin nh\u01B0:</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlockSpam</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span><span class="token punctuation">{</span>
	<span class="token class-name">Long</span> time<span class="token punctuation">;</span>          <span class="token comment">// th\xF2i gian g\u1EA7n nh\u1EA5t g\u1ECDi Request</span>
	<span class="token class-name">Integer</span> requests<span class="token punctuation">;</span>   <span class="token comment">// S\u1ED1 Request \u0111\xE3 g\u1ECDi trong 1s</span>
	
<span class="token punctuation">}</span>
</code></pre></div><p>Nh\u01B0 v\u1EADy ta s\u1EBD ghi l\u1EA1i t\u1EEBng IP g\u1ECDi API v\xE0 c\u1EADp nh\u1EADt l\u1EA1i time \u0111\u1ED3ng th\u1EDDi t\u0103ng bi\u1EBFn <code>requests</code> l\xEAn sau m\u1ED7i l\u1EA7n g\u1ECDi.</p><p>\u0110\xE3 xong ph\u1EA7n x\u1EED l\xED, ta c\u1EA7n ngh\u0129 \u0111\u1EBFn vi\u1EC7c g\u1ECDi th\u1EBF n\xE0o cho t\u1ED1i \u01B0u nh\u1EA5t mang l\u1EA1i t\u1ED1c \u0111\u1ED9 cao nh\u1EA5t. v\xEC s\u1ED1 data n\xE0y ta c\u1EA7n ph\u1EA3i l\u01B0u l\u1EA1i!</p><p>Ta c\u1EA7n m\u1ED9t <code>Database</code> c\xF3 th\u1EC3 l\u01B0u l\u1EA1i d\u1EEF li\u1EC7u, ph\u1EA3n h\u1ED3i nhanh ch\xF3ng v\xE0 x\xF3a d\u1EEF li\u1EC7u m\u1ED9t c\xE1ch t\u1EF1 \u0111\u1ED9ng (v\xEC ta ch\u1EC9 kh\xF3a IP \u0111\xF3 trong 1 l\xFAc ch\u1EE9 kh\xF4ng th\u1EC3 kh\xF3a v\u0129nh vi\u1EC5n \u0111\u01B0\u1EE3c)</p><p>M\xECnh bi\u1EBFt m\u1ED9t DB c\xF3 th\u1EC3 gi\xFAp ch\xFAng ta nh\u1EEFng vi\u1EC7c tr\xEAn, \u0111\xF3 l\xE0 <code>Redis</code></p><h3 id="redis-la-gi" tabindex="-1"><a class="header-anchor" href="#redis-la-gi" aria-hidden="true">#</a> Redis l\xE0 g\xEC</h3><p>Redis l\xE0 m\u1ED9t h\u1EC7 th\u1ED1ng c\u01A1 s\u1EDF d\u1EEF li\u1EC7u in-memory (l\u01B0u tr\u1EEF trong b\u1ED9 nh\u1EDB RAM) m\xE3 ngu\u1ED3n m\u1EDF, th\u01B0\u1EDDng \u0111\u01B0\u1EE3c s\u1EED d\u1EE5ng nh\u01B0 m\u1ED9t c\u01A1 s\u1EDF d\u1EEF li\u1EC7u key-value v\xE0 l\xE0m cache.</p><p><strong>Redis l\u01B0u \u1EDF RAM</strong> b\u1EDFi v\u1EADy c\xF3 t\u1ED1c \u0111\u1ED9 \u0111\u1ECDc ghi d\u1EEF li\u1EC7u nhanh g\u1EA5p <strong>1.000 l\u1EA7n</strong> so v\u1EDBi SQL (My-SQL hay MS SQL).</p><ul><li>So v\u1EC1 th\u1EDDi gian th\xEC <strong>Redis &gt; MongoDB &gt; Firebase &gt; SQL</strong></li></ul><p><strong>Redis c\xF3 th\u1EC3</strong> t\u1EF1 x\xF3a d\u1EEF li\u1EC7u n\u1EBFu nh\u01B0 ch\xFAng h\u1EBFt h\u1EA1n</p><ul><li>V\xED d\u1EE5 m\xECnh l\u01B0u m\u1ED9t JSON v\xE0 \u0111\u1EB7t th\u1EDDi gian cho n\xF3 l\xE0 <strong>5s</strong> th\xEC sau <em>5s</em> n\xF3 s\u1EBD t\u1EF1 bi\u1EBFn m\u1EA5t (C\u01A1 ch\u1EBF n\xE0y t\u01B0\u01A1ng t\u1EF1 <strong>Trigger</strong> trong SQL)</li></ul><h2 id="bat-\u0111au-code" tabindex="-1"><a class="header-anchor" href="#bat-\u0111au-code" aria-hidden="true">#</a> B\u1EAFt \u0111\u1EA7u code</h2><h3 id="tai-nguyen" tabindex="-1"><a class="header-anchor" href="#tai-nguyen" aria-hidden="true">#</a> T\xE0i nguy\xEAn</h3><p>Tr\u01B0\u1EDBc ti\xEAn ch\xFAng m\xECnh c\u1EA7n c\xF3 c\xE1c t\xE0i nguy\xEAn sau:</p><ul><li>Redis CLI: v\xEC Redis ch\u1EC9 c\xF3 th\u1EC3 c\xE0i tr\xEAn MacOS v\xE0 Linux n\xEAn c\xE1c b\u1EA1n n\xE0o d\xF9ng Windows c\xF3 th\u1EC3 v\xE0o <a href="https://github.com/dangth12/windows-Redis-x64-3.0.504" target="_blank" rel="noopener noreferrer">repo sau</a> c\u1EE7a m\xECnh v\xE0 t\u1EA3i v\u1EC1 nh\xE9</li><li>VS Code ho\u1EB7c Spring Tools Suite</li></ul><h3 id="bat-\u0111au-du-an" tabindex="-1"><a class="header-anchor" href="#bat-\u0111au-du-an" aria-hidden="true">#</a> B\u1EAFt \u0111\u1EA7u d\u1EF1 \xE1n</h3><p>\u0110\u1EA7u ti\xEAn b\u1EA1n h\xE3y ch\u1EA1y Redis l\xEAn (trong Repo m\xECnh c\xF3 h\u01B0\u1EDBng d\u1EABn)</p><h4 id="cai-cac-thu-vien-can-thiet" tabindex="-1"><a class="header-anchor" href="#cai-cac-thu-vien-can-thiet" aria-hidden="true">#</a> C\xE0i c\xE1c th\u01B0 vi\u1EC7n c\u1EA7n thi\u1EBFt</h4><div class="language-xml ext-xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>redis.clients<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jedis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.aspectj<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>aspectjrt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.9.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span> 
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h4 id="cac-bien-moi-truong-can-thiet" tabindex="-1"><a class="header-anchor" href="#cac-bien-moi-truong-can-thiet" aria-hidden="true">#</a> C\xE1c bi\u1EBFn m\xF4i tr\u01B0\u1EDDng c\u1EA7n thi\u1EBFt</h4><div class="language-properties ext-properties"><pre class="language-properties"><code><span class="token comment"># Redis Configuration</span>
<span class="token key attr-name">spring.redis.host</span><span class="token punctuation">=</span><span class="token value attr-value">localhost</span>
<span class="token key attr-name">spring.redis.port</span><span class="token punctuation">=</span><span class="token value attr-value">6379</span>
<span class="token key attr-name">spring.redis.password</span><span class="token punctuation">=</span>             
<span class="token key attr-name">spring.redis.database</span><span class="token punctuation">=</span><span class="token value attr-value">0             </span>
<span class="token key attr-name">spring.redis.cache.ttl</span><span class="token punctuation">=</span><span class="token value attr-value">10</span>

<span class="token comment">#10 requests trong 1P</span>
<span class="token key attr-name">davis.redis.ttl</span> <span class="token punctuation">=</span> <span class="token value attr-value">60	</span>
<span class="token key attr-name">davis.redis.requests</span> <span class="token punctuation">=</span> <span class="token value attr-value">10</span>
</code></pre></div><h4 id="config" tabindex="-1"><a class="header-anchor" href="#config" aria-hidden="true">#</a> Config</h4><p>C\u1EA5u h\xECnh cho c\xE1c k\u1EBFt n\u1ED1i t\u1EDBi <code>Redis</code></p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>davis<span class="token punctuation">.</span>config</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisConfig</span> <span class="token punctuation">{</span>
	<span class="token annotation punctuation">@Bean</span>
	<span class="token keyword">public</span> <span class="token class-name">JedisConnectionFactory</span> <span class="token function">connectionfactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">RedisStandaloneConfiguration</span> config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedisStandaloneConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		config<span class="token punctuation">.</span><span class="token function">setHostName</span><span class="token punctuation">(</span><span class="token string">&quot;localhost&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		config<span class="token punctuation">.</span><span class="token function">setPort</span><span class="token punctuation">(</span><span class="token number">6379</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">JedisConnectionFactory</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token annotation punctuation">@Bean</span>
	<span class="token keyword">public</span> <span class="token class-name">RedisTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> <span class="token function">redisTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">RedisTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">&gt;</span></span> templ <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedisTemplate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		templ<span class="token punctuation">.</span><span class="token function">setConnectionFactory</span><span class="token punctuation">(</span><span class="token function">connectionfactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		templ<span class="token punctuation">.</span><span class="token function">setKeySerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		templ<span class="token punctuation">.</span><span class="token function">setHashKeySerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">StringRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		templ<span class="token punctuation">.</span><span class="token function">setHashKeySerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">JdkSerializationRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		templ<span class="token punctuation">.</span><span class="token function">setValueSerializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">JdkSerializationRedisSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		templ<span class="token punctuation">.</span><span class="token function">setEnableTransactionSupport</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		templ<span class="token punctuation">.</span><span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> templ<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="model" tabindex="-1"><a class="header-anchor" href="#model" aria-hidden="true">#</a> Model</h4><p>Kh\u1ECFi t\u1EA1o \u0111\u1ED1i t\u01B0\u1EE3ng sau \u0111\xE2y \u0111\u1EC3 l\u01B0u v\xE0o Cache</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>davis<span class="token punctuation">.</span>model</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BlockSpam</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span><span class="token punctuation">{</span>
	<span class="token class-name">Long</span> currenTime<span class="token punctuation">;</span>
	<span class="token class-name">Integer</span> countrequest<span class="token punctuation">;</span>
	
	
<span class="token punctuation">}</span>
</code></pre></div><h4 id="service" tabindex="-1"><a class="header-anchor" href="#service" aria-hidden="true">#</a> Service</h4><p>T\u1EA1o m\u1ED9t Service \u0111\u1EC3 t\u01B0\u01A1ng t\xE1c v\u1EDBi <code>Redis</code></p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>davis<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RateLimiterService</span> <span class="token punctuation">{</span>
	<span class="token annotation punctuation">@Autowired</span>
	<span class="token keyword">private</span> <span class="token class-name">RedisTemplate</span> redisTemplate<span class="token punctuation">;</span>

	<span class="token annotation punctuation">@Autowired</span>
	<span class="token keyword">public</span> <span class="token class-name">RateLimiterService</span><span class="token punctuation">(</span><span class="token class-name">StringRedisTemplate</span> redisTemplate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate <span class="token operator">=</span> redisTemplate<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">allowRequest</span><span class="token punctuation">(</span><span class="token class-name">String</span> ipAddress<span class="token punctuation">,</span> <span class="token keyword">long</span> maxRequests<span class="token punctuation">,</span> <span class="token keyword">long</span> timeIntervalInSeconds<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">String</span> key <span class="token operator">=</span> <span class="token string">&quot;ip:&quot;</span> <span class="token operator">+</span> ipAddress<span class="token punctuation">;</span>
		<span class="token class-name">Long</span> currentTime <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">;</span>
		<span class="token comment">//Long previousRequestTime = (Long) redisTemplate.opsForValue().get(key);</span>
		<span class="token class-name">BlockSpam</span> b <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">BlockSpam</span><span class="token punctuation">)</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// n\u1EBFu ch\u01B0a request trong 10p</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token class-name">BlockSpam</span> bs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BlockSpam</span><span class="token punctuation">(</span>currentTime<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> bs<span class="token punctuation">,</span> timeIntervalInSeconds<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		b<span class="token punctuation">.</span><span class="token function">setCountrequest</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">getCountrequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">getCountrequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> maxRequests<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> b<span class="token punctuation">,</span> timeIntervalInSeconds<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// ng\u01B0\u1EE3pc l\u1EA1i</span>
		<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Bi chan trong &quot;</span><span class="token operator">+</span> <span class="token punctuation">(</span>currentTime <span class="token operator">-</span> b<span class="token punctuation">.</span><span class="token function">getCurrenTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>T\u1EA1o m\u1ED9t Service \u0111\u1EC3 l\u01B0u model v\xE0o Cache</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>davis<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RateLimitService</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">StringRedisTemplate</span> redisTemplate<span class="token punctuation">;</span>

    
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">public</span> <span class="token class-name">RateLimitService</span><span class="token punctuation">(</span><span class="token class-name">StringRedisTemplate</span> redisTemplate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate <span class="token operator">=</span> redisTemplate<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAllowed</span><span class="token punctuation">(</span><span class="token class-name">String</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> key <span class="token operator">=</span> <span class="token string">&quot;rate_limit:&quot;</span> <span class="token operator">+</span> userId<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Instant</span> now <span class="token operator">=</span> <span class="token class-name">Instant</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Instant</span> lastRequestTime <span class="token operator">=</span> <span class="token class-name">Instant</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span>
                redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">:</span> now<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Ki\u1EC3m tra xem \u0111\xE3 \u0111\u1EE7 th\u1EDDi gian gi\u1EEFa c\xE1c y\xEAu c\u1EA7u ch\u01B0a</span>
        <span class="token class-name">Duration</span> timeElapsed <span class="token operator">=</span> <span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">between</span><span class="token punctuation">(</span>lastRequestTime<span class="token punctuation">,</span> now<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>timeElapsed<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Reset th\u1EDDi gian cho y\xEAu c\u1EA7u ti\u1EBFp theo v\xE0 c\u1EADp nh\u1EADt v\xE0o Redis</span>
            redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> now<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// Ch\u01B0a \u0111\u1EE7 th\u1EDDi gian gi\u1EEFa c\xE1c y\xEAu c\u1EA7u</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>Vi\u1EBFt m\u1ED9t Service t\u1EA1o <code>@Anotation</code> t\u1EF1 \u0111\u1ED9ng check Request</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>davis<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@Aspect</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisCheckAspect</span> <span class="token punctuation">{</span>
	

	<span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${davis.redis.ttl}&quot;</span><span class="token punctuation">)</span>	<span class="token comment">// th\u1EDDi gian t\u1ED3n t\u1EA1i c\u1EE7a m\u1ED9t khi\xEAn (60s)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> ttl<span class="token punctuation">;</span>
	
	<span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${davis.redis.requests}&quot;</span><span class="token punctuation">)</span>	<span class="token comment">// s\u1ED1 reuqest \u0111\u01B0\u1EE3c ch\u1EA1y trong 1 phi\xEAn khi\xEAn (10)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> requests<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">RedisService</span> redisService<span class="token punctuation">;</span>
    
    <span class="token comment">// l\u1EA5y ra IP c\u1EE7a Client</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">getClientIp</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">String</span> ipAddress <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">&quot;X-Forwarded-For&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> ipAddress<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&quot;unknown&quot;</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>ipAddress<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			ipAddress <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Proxy-Client-IP&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> ipAddress<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&quot;unknown&quot;</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>ipAddress<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			ipAddress <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">&quot;WL-Proxy-Client-IP&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> ipAddress<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&quot;unknown&quot;</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>ipAddress<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			ipAddress <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">&quot;HTTP_CLIENT_IP&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> ipAddress<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&quot;unknown&quot;</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>ipAddress<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			ipAddress <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">&quot;HTTP_X_FORWARDED_FOR&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> ipAddress<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&quot;unknown&quot;</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>ipAddress<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			ipAddress <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getRemoteAddr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>ipAddress<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;0:0:0:0:0:0:0:1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// L\u1EA5y \u0111\u1ECBa ch\u1EC9 IPv4 cho localhost</span>
				<span class="token keyword">try</span> <span class="token punctuation">{</span>
					<span class="token class-name">InetAddress</span> inetAddress <span class="token operator">=</span> <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getLocalHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
					ipAddress <span class="token operator">=</span> inetAddress<span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">UnknownHostException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token comment">// X\u1EED l\xFD l\u1ED7i n\u1EBFu c\u1EA7n</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">return</span> ipAddress<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Around</span><span class="token punctuation">(</span><span class="token string">&quot;@annotation(com.davis.RedisCheck)&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">checkRedis</span><span class="token punctuation">(</span><span class="token class-name">ProceedingJoinPoint</span> joinPoint<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
    	
    	 <span class="token comment">// L\u1EA5y request hi\u1EC7n t\u1EA1i</span>
        <span class="token class-name">ServletRequestAttributes</span> attributes <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ServletRequestAttributes</span><span class="token punctuation">)</span> <span class="token class-name">RequestContextHolder</span><span class="token punctuation">.</span><span class="token function">currentRequestAttributes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">HttpServletRequest</span> request <span class="token operator">=</span> attributes<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// Th\u1EF1c hi\u1EC7n ki\u1EC3m tra v\xE0 x\u1EED l\xFD Redis \u1EDF \u0111\xE2y</span>
        <span class="token comment">// V\xED d\u1EE5: Ki\u1EC3m tra m\u1ED9t key trong Redis v\xE0 x\u1EED l\xFD d\u1EF1a tr\xEAn k\u1EBFt qu\u1EA3</span>
        <span class="token keyword">boolean</span> isValid <span class="token operator">=</span> redisService<span class="token punctuation">.</span><span class="token function">allowRequest</span><span class="token punctuation">(</span><span class="token function">getClientIp</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">,</span> requests<span class="token punctuation">,</span> ttl<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Thay th\u1EBF b\u1EB1ng ph\u01B0\u01A1ng th\u1EE9c ki\u1EC3m tra th\u1EF1c t\u1EBF</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>isValid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// N\u1EBFu request h\u1EE3p l\u1EC7, ti\u1EBFp t\u1EE5c th\u1EF1c hi\u1EC7n method b\u1EB1ng c\xE1ch g\u1ECDi joinPoint.proceed()</span>
            <span class="token keyword">return</span> joinPoint<span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// N\u1EBFu kh\xF4ng h\u1EE3p l\u1EC7, c\xF3 th\u1EC3 tr\u1EA3 v\u1EC1 l\u1ED7i ho\u1EB7c x\u1EED l\xFD kh\xE1c</span>
        	<span class="token keyword">return</span> <span class="token class-name">ResponseEntity</span><span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span>TOO_MANY_REQUESTS<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token string">&quot;Too many requests&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="controlers" tabindex="-1"><a class="header-anchor" href="#controlers" aria-hidden="true">#</a> Controlers</h4><p>Vi\u1EBFt m\u1ED9t API \u0111\u1EC3 test th\xF4i</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>davis<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">RateLimiterService</span> rateLimiterService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@RedisCheck</span> <span class="token comment">// \xC1p d\u1EE5ng ki\u1EC3m tra Redis tr\u01B0\u1EDBc khi x\u1EED l\xFD method n\xE0y</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/my-endpoint&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">myEndpoint</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> ipAddress <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getRemoteAddr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Cho ph\xE9p t\u1ED1i \u0111a 10 request trong 1 ph\xFAt t\u1EEB c\xF9ng m\u1ED9t IP</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>rateLimiterService<span class="token punctuation">.</span><span class="token function">allowRequest</span><span class="token punctuation">(</span>ipAddress<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>             
            <span class="token comment">// X\u1EED l\xFD request \u1EDF \u0111\xE2y</span>
            <span class="token keyword">return</span> <span class="token class-name">ResponseEntity</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token string">&quot;Request allowed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">ResponseEntity</span><span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span>TOO_MANY_REQUESTS<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">body</span><span class="token punctuation">(</span><span class="token string">&quot;Too many requests&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,63),e=[o];function c(u,l){return s(),a("div",null,e)}var k=n(p,[["render",c],["__file","index.html.vue"]]);export{k as default};
