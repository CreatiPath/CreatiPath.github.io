import{_ as n,o as a,c as s,b as t}from"./app.be380e2e.js";const p={},o=t(`<h1 id="bai-2-tim-hieu-ve-ejs" tabindex="-1"><a class="header-anchor" href="#bai-2-tim-hieu-ve-ejs" aria-hidden="true">#</a> B\xE0i 2. T\xECm hi\u1EC3u v\u1EC1 Ejs</h1><p>S\u1EED d\u1EE5ng template EJS trong NodeJS gi\xFAp b\u1EA1n code v\u1EDBi c\xE1c views m\u1ED9t c\xE1ch nhanh ch\xF3ng. EJS l\xE0 m\u1ED9t template \u0111\u01B0\u1EE3c d\xF9ng ph\u1ED5 bi\u1EBFn trong nodejs.</p><h2 id="cai-\u0111at-ejs" tabindex="-1"><a class="header-anchor" href="#cai-\u0111at-ejs" aria-hidden="true">#</a> C\xE0i \u0111\u1EB7t EJS</h2><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> ejs
</code></pre></div><p>Khai b\xE1o s\u1EED d\u1EE5ng EJS Khai b\xE1o view engine v\xE0 ch\u1EC9 \u0111\u1ECBnh folder ch\u1EE9a c\xE1c view:</p><div class="language-text ext-text"><pre class="language-text"><code>//index.js
const express = require(&quot;express&quot;);
const app = express();
const port = 3000;

app.set(&quot;view engine&quot;,&quot;ejs&quot;);
app.set(&quot;views&quot;,&quot;./views&quot;);

app.listen(port, () =&gt; { 
	console.log(\`Project dang chay o port \${port}\`)
})
</code></pre></div><p>N\u1EA1p view: M\u1ED7i file ph\u1EA3i \u0111\u1EA1t trong folder views \u0111\xE3 khai b\xE1o, v\xE0 c\xF3 t\xEAn m\u1EDF r\u1ED9ng l\xE0 .ejs. \u0110\u1EC3 n\u1EA1p view v\xE0 response, b\u1EA1n d\xF9ng l\u1EC7nh render nh\u01B0 sau:</p><p><img src="https://github.com/dangtranhuu/images/blob/main/angurvad/nodejs/session2/image.png?raw=true" alt="object-class-diagrame-1.png"></p><p>\u0110\u1EC3 n\u1EA1p view v\xE0 truy\u1EC1n bi\u1EBFn cho view, d\xF9ng c\xFA ph\xE1p nh\u01B0 sau:</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&quot;chao&quot;</span><span class="token punctuation">,</span> 
	<span class="token punctuation">{</span>
		<span class="token literal-property property">title</span><span class="token operator">:</span><span class="token string">&quot;Anh&quot;</span> <span class="token punctuation">,</span> 
		<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;T\xE8o&quot;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u0110\u1EC3 hi\u1EC7n gi\xE1 tr\u1ECB bi\u1EBFn trong view, b\u1EA1n d\xF9ng l\u1EC7nh: <strong>&lt;%= t\xEAn bi\u1EBFn %&gt;.</strong></p><p>V\xED d\u1EE5:</p><p><img src="https://github.com/dangtranhuu/images/blob/main/angurvad/nodejs/session2/image-1.png?raw=true" alt="object-class-diagrame-1.png"></p><p>Code trong view ejs \u0110\u1EC3 vi\u1EBFt code trong view ejs, b\u1EA1n d\xF9ng c\xFA ph\xE1p &lt;% code js %&gt; .</p><h3 id="su-dung-lenh-if" tabindex="-1"><a class="header-anchor" href="#su-dung-lenh-if" aria-hidden="true">#</a> S\u1EED d\u1EE5ng l\u1EC7nh if</h3><div class="language-text ext-text"><pre class="language-text"><code>Ch\xE0o b\u1EA1n! 
&lt;% if (day==&#39;Th\u1EE9 b\u1EA3y&#39; || day==&#39;Ch\u1EE7 nh\u1EADt&#39;) { %&gt;
&lt;h3&gt;H\xF4m nay l\xE0 cu\u1ED1i tu\u1EA7n&lt;/h3&gt;
&lt;% } else { %&gt;
&lt;h3&gt;H\xF4m nay l\xE0 ng\xE0y &lt;%= day%&gt;&lt;/h3&gt;
&lt;% }%&gt;
</code></pre></div><h3 id="vong-lap-for-trong-ejs-view" tabindex="-1"><a class="header-anchor" href="#vong-lap-for-trong-ejs-view" aria-hidden="true">#</a> V\xF2ng l\u1EB7p for trong ejs view</h3><p>Trong ejs view, b\u1EA1n c\xF3 th\u1EC3 l\u1EB7p qua m\u1EA3ng r\u1EA5t d\u1EC5 d\xE0ng</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/sp&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span> 
    <span class="token keyword">var</span> sp<span class="token operator">=</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;HTC M9&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">6000000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;Samsung S8&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">750000</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
    res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&quot;sp&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">sp</span><span class="token operator">:</span>sp<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><div class="language-text ext-text"><pre class="language-text"><code>&lt;% for (let p of sp)  {%&gt;
    &lt;p&gt;
        T\xEAn SP: &lt;b&gt; &lt;%=p.name%&gt; &lt;/b&gt; &lt;br&gt; 
        Gi\xE1 &lt;%=p.price %&gt; 
    &lt;/p&gt;
    &lt;hr&gt;
&lt;% } %&gt;
</code></pre></div><h3 id="su-dung-css-trong-view-ejs" tabindex="-1"><a class="header-anchor" href="#su-dung-css-trong-view-ejs" aria-hidden="true">#</a> S\u1EED d\u1EE5ng CSS trong view ejs</h3><p>Ch\u1EC9 \u0111\u1ECBnh folder public nh\u01B0 l\xE0 folder g\u1ED1c cho view truy c\u1EADp</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">//index.js</span>
<span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;express&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> port <span class="token operator">=</span> <span class="token number">3000</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;view engine&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;ejs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;views&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;./views&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span><span class="token string">&#39;public&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Trong view<span class="token punctuation">,</span> nh\xFAng file css \u0111\xE3 t\u1EA1o trong folder <span class="token keyword">public</span>
</code></pre></div><div class="language-text ext-text"><pre class="language-text"><code>&lt;link href=&quot;css/c1.css&quot; rel=&quot;stylesheet&quot;&gt;
&lt;% for (let p of sp)  {%&gt;
    &lt;p&gt;
        T\xEAn SP: &lt;b&gt; &lt;%=p.name%&gt; &lt;/b&gt; &lt;br&gt; 
        Gi\xE1 &lt;%=p.price %&gt; 
    &lt;/p&gt;
    &lt;hr&gt;
&lt;% } %&gt;
</code></pre></div><h2 id="nhan-tham-so-dang-tu-url" tabindex="-1"><a class="header-anchor" href="#nhan-tham-so-dang-tu-url" aria-hidden="true">#</a> Nh\u1EADn tham s\u1ED1 d\u1EA1ng t\u1EEB url</h2><p>C\xE1c tham s\u1ED1 trong url c\xF3 th\u1EC3 truy\u1EC1n b\u1EB1ng 2 c\xE1ch.</p><ul><li>C\xE1ch 1 l\xE0 c\xE1c gi\xE1 tr\u1ECB truy\u1EC1n tr\u1EF1c ti\u1EBFp trong th\xE0nh ph\u1EA7n c\u1EE7a url, https://localhost:3000/search/abc/3</li></ul><p><img src="https://github.com/dangtranhuu/images/blob/main/angurvad/nodejs/session2/image-3.png?raw=true" alt="object-class-diagrame-1.png"></p><div class="language-javascript ext-js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/search/:keyword/:page&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>   
    <span class="token keyword">let</span> str <span class="token operator">=</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">keyword= </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>keyword<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;br&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    str<span class="token operator">+=</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">page= </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>page<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token punctuation">;</span>
    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p><img src="https://github.com/dangtranhuu/images/blob/main/angurvad/nodejs/session2/image-4.png?raw=true" alt="object-class-diagrame-1.png"></p><ul><li>C\xE1ch 2: l\xE0 c\xE1c gi\xE1 tr\u1ECB truy\u1EC1n \u0111\u1EBFn nh\u01B0 tham s\u1ED1 , m\u1ED7i gi\xE1 tr\u1ECB c\xF3 t\xEAn. http://localhost:3000/cat?idcat=10&amp;page=3</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/cat&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  
    str<span class="token operator">=</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">idcat= </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>req<span class="token punctuation">.</span>query<span class="token punctuation">.</span>idcat<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> &lt;br&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    str<span class="token operator">+=</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">page= </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>req<span class="token punctuation">.</span>query<span class="token punctuation">.</span>page<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="su-dung-form" tabindex="-1"><a class="header-anchor" href="#su-dung-form" aria-hidden="true">#</a> S\u1EED d\u1EE5ng form</h2><p>a. Trong index.js, n\u1EA1p module body-parser v\xE0 use</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> bodyParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;body-parser&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">urlencoded</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">extended</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
</code></pre></div><p>b. T\u1EA1o 1 view ch\u1EE9a form. Tag form ph\u1EA3i c\xF3 thu\u1ED9c t\xEDnh action tr\u1ECF l\xEAn 1 route s\u1EBD nh\u1EADn d\u1EEF li\u1EC7u khi user submit</p><div class="language-html ext-html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/addEmail<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Add Email<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>c. T\u1EA1o route \u0111\u1EC3 n\u1EA1p view</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/addEmail&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&quot;addEmail.ejs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>d. T\u1EA1o route ti\u1EBFp nh\u1EADn d\u1EEF li\u1EC7u</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/addEmail&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">let</span> email  <span class="token operator">=</span> req<span class="token punctuation">.</span>body<span class="token punctuation">.</span>email<span class="token punctuation">;</span>
    res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="upload-hinh-trong-form" tabindex="-1"><a class="header-anchor" href="#upload-hinh-trong-form" aria-hidden="true">#</a> Upload h\xECnh trong form</h2><p>\u0110\u1EC3 th\u1EF1c hi\u1EC7n upload h\xECnh t\u1EEB form, b\u1EA1n c\u1EA7n th\u1EF1c hi\u1EC7n :</p><p><strong>C\xE0i \u0111\u1EB7t module formidable</strong></p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> formidable
</code></pre></div><p><strong>Nh\xFAng module v\xE0o trang, n\xEAn nh\xFAng lu\xF4n module file sytem (fs) \u0111\u1EC3 ti\u1EC7n c\xE1c thao t\xE1c tr\xEAn file \u0111\xE3 upload</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> formidable <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;formidable&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>T\u1EA1o 1 view ch\u1EE9a form. Tag form ph\u1EA3i c\xF3 thu\u1ED9c t\xEDnh <code>enctype=\u201Dmultipart/form-data</code> , trong form c\xF3 tag <code>&lt;input type=\u201Dfile\u201D&gt;</code> v\xE0 form ph\u1EA3i c\xF3 thu\u1ED9c t\xEDnh action tr\u1ECF l\xEAn 1 route s\u1EBD nh\u1EADn d\u1EEF li\u1EC7u</strong></p><div class="language-html ext-html"><pre class="language-html"><code><span class="token comment">&lt;!-- addproduct.ejs --&gt;</span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/addnewprod<span class="token punctuation">&quot;</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>post<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>form<span class="token punctuation">&quot;</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>multipart/form-data<span class="token punctuation">&quot;</span></span> <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>T\xEAn s\u1EA3n ph\u1EA9m<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>productName<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>H\xECnh s\u1EA3n ph\u1EA9m<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>productImage<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Th\xEAm s\u1EA3n ph\u1EA9m<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p><strong>T\u1EA1o route n\u1EA1p view ch\u1EE9a form</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/addprod&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&quot;addproduct.ejs&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p><strong>T\u1EA1o folder \u0111\u1EC3 ch\u1EE9a h\xECnh:</strong></p><p><img src="https://github.com/dangtranhuu/images/blob/main/angurvad/nodejs/session2/image-5.png?raw=true" alt="object-class-diagrame-1.png"></p><p><strong>T\u1EA1o route nh\u1EADn d\u1EEF li\u1EC7u</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/addnewprod&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> form <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">formidable<span class="token punctuation">.</span>IncomingForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    form<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> fields<span class="token punctuation">,</span> files</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">let</span> name <span class="token operator">=</span> fields<span class="token punctuation">.</span>productName<span class="token punctuation">;</span>      
     <span class="token keyword">let</span> tmpPath <span class="token operator">=</span> files<span class="token punctuation">.</span>productImage<span class="token punctuation">.</span>filepath<span class="token punctuation">;</span>     
     <span class="token keyword">let</span> tenFile <span class="token operator">=</span> files<span class="token punctuation">.</span>productImage<span class="token punctuation">.</span>originalFilename<span class="token punctuation">;</span>
     <span class="token keyword">let</span> destPath <span class="token operator">=</span>  __dirname <span class="token operator">+</span><span class="token string">&#39;\\\\public\\\\images\\\\&#39;</span> <span class="token operator">+</span> tenFile<span class="token punctuation">;</span> 
     fs<span class="token punctuation">.</span><span class="token function">rename</span><span class="token punctuation">(</span>tmpPath<span class="token punctuation">,</span> destPath<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//copyFile</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
       res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">&#39;File \u0111\xE3 upload&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//res.end(JSON.stringify({ fields, files }, null, 2));</span>
      res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&quot;Name=&quot;</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p><strong>Xem th\xEAm: <a href="https://www.w3schools.com/nodejs/nodejs_uploadfiles.asp" target="_blank" rel="noopener noreferrer">t\u1EA1i \u0111\xE2y</a></strong></p><h2 id="xoa-anh" tabindex="-1"><a class="header-anchor" href="#xoa-anh" aria-hidden="true">#</a> Xo\xE1 \u1EA3nh</h2><p>S\u1EED d\u1EE5ng module fs :</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> fs<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span>\u2018fs\u2019<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>D\xF9ng h\xE0m unlink \u0111\u1EC3 th\u1EF1c hi\u1EC7n xo\xE1</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/delete&quot;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    pathfile<span class="token operator">=</span><span class="token string">&quot;/images/a.png&quot;</span><span class="token punctuation">;</span>
   fs<span class="token punctuation">.</span><span class="token function">unlink</span><span class="token punctuation">(</span>pathfile<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;File deleted!&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">&quot;File \u0111\xE3 x\xF3a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u0110\u1ECDc th\xEAm t\xE0i li\u1EC7u ejs: <a href="https://www.npmjs.com/package/ejs" target="_blank" rel="noopener noreferrer">t\u1EA1i \u0111\xE2y</a></p>`,62),e=[o];function c(u,l){return a(),s("div",null,e)}var r=n(p,[["render",c],["__file","session2.html.vue"]]);export{r as default};
