import{_ as n,o as s,c as a,b as t}from"./app.be380e2e.js";const p={},o=t(`<hr><h1 id="bai-6-xay-dung-restful-api" tabindex="-1"><a class="header-anchor" href="#bai-6-xay-dung-restful-api" aria-hidden="true">#</a> B\xE0i 6. X\xE2y d\u1EF1ng Restful API</h1><p>S\u1EED d\u1EE5ng Restful API NodeJS h\u01B0\u1EDBng d\u1EABn c\xE1ch g\u1ECDi API trong trang web. C\xF3 th\u1EC3 g\u1ECDi b\u1EB1ng h\xE0m fetch, xmlHttpRequest, hay d\xF9ng th\u01B0 vi\u1EC7n Jquery, Axios, AngularJS, ReactJS \u2026</p><p>B\xE0i vi\u1EBFt n\xE0y h\u01B0\u1EDBng d\u1EABn b\u1EA1n d\xF9ng Fetch API (h\xE0m fetch) v\xE0 th\u01B0 vi\u1EC7n axios</p><h2 id="chuan-bi-\u0111e-su-dung-restful-api" tabindex="-1"><a class="header-anchor" href="#chuan-bi-\u0111e-su-dung-restful-api" aria-hidden="true">#</a> Chu\u1EA9n b\u1ECB \u0111\u1EC3 s\u1EED d\u1EE5ng restful api</h2><p>B\u1EA1n ph\u1EA3i c\xF3 1 b\u1ED9 restful API c\xE1i \u0111\xE3 r\u1ED3i m\u1EDBi g\u1ECDi \u0111\u01B0\u1EE3c, \u1EDF b\xE0i h\u01B0\u1EDBng d\u1EABn RESTful API trong NodeJS , b\u1EA1n \u0111\xE3 th\u1EF1c hi\u1EC7n v\u1EDBi m\u1ED9t b\u1ED9 restful API cho <strong>product</strong>. B\xE2y gi\u1EDD b\u1EA1n t\u1EA1o nhanh m\u1ED9t b\u1ED9 kh\xE1c (<strong>users</strong>) \u0111\u1EC3 ph\u1EE5c v\u1EE5 b\xE0i n\xE0y nh\xE9, c\u0169ng l\xE0 d\u1ECBp \u0111\u1EC3 \xF4n l\u1EA1i restful \u0111\xE3 h\u1ECDc \u1EDF b\xE0i tr\u01B0\u1EDBc.</p><h3 id="_1-tao-database-va-table" tabindex="-1"><a class="header-anchor" href="#_1-tao-database-va-table" aria-hidden="true">#</a> 1. T\u1EA1o database v\xE0 table</h3><ul><li>V\xE0o phpmyadmin, t\u1EA1o 1 database t\xEAn shop (n\u1EBFu c\xF3 r\u1ED3i th\xEC kh\u1ECFi t\u1EA1o)</li><li>V\xE0o database shop, t\u1EA1o table t\xEAn users nh\u01B0 sau:</li></ul><p><img src="https://github.com/dangtranhuu/images/blob/main/angurvad/nodejs/session6/table-users-structure.png?raw=true" alt="object-class-diagrame-1.png"></p><h3 id="_2-cai-module-express-va-express-generator" tabindex="-1"><a class="header-anchor" href="#_2-cai-module-express-va-express-generator" aria-hidden="true">#</a> 2. C\xE0i module express v\xE0 express-generator</h3><p>N\u1EBFu m\xE1y c\u1EE7a b\u1EA1n \u0111\xE3 c\xE0i r\u1ED3i th\xEC th\xF4i b\u1ECF qua, c\xF2n ch\u01B0a th\xEC m\u1EDF command line r\u1ED3i g\xF5 l\u1EC7nh npm install -g express , ti\u1EBFp theo g\xF5 l\u1EC7nh npm -g install express-generator</p><h3 id="_3-tao-project-\u0111e-thuc-tap" tabindex="-1"><a class="header-anchor" href="#_3-tao-project-\u0111e-thuc-tap" aria-hidden="true">#</a> 3. T\u1EA1o project \u0111\u1EC3 th\u1EF1c t\u1EADp</h3><p>V\u1EABn trong command line r\u1ED3i ch\u1EA1y l\u1EC7nh:</p><div class="language-bash ext-sh"><pre class="language-bash"><code>express <span class="token parameter variable">--ejs</span> SuDungAPI
</code></pre></div><p><img src="https://github.com/dangtranhuu/images/blob/main/angurvad/nodejs/session6/tao-project-voi-express-generator.png?raw=true" alt="object-class-diagrame-1.png"></p><p>Chuy\u1EC3n v\xE0o folder SuDungAPI m\u1EDBi t\u1EA1o v\xE0 ch\u1EA1y l\u1EC7nh c\xE0i \u0111\u1EB7t c\xE1c module c\u1EA7n thi\u1EBFt</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span>
<span class="token function">npm</span> <span class="token function">install</span> mysql
</code></pre></div><h3 id="_4-tao-model-ket-noi-db" tabindex="-1"><a class="header-anchor" href="#_4-tao-model-ket-noi-db" aria-hidden="true">#</a> 4. T\u1EA1o model k\u1EBFt n\u1ED1i db</h3><ul><li>T\u1EA1o folder models trong project</li><li>T\u1EA1o file models/database.js</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> mysql <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mysql&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">var</span> db <span class="token operator">=</span> mysql<span class="token punctuation">.</span><span class="token function">createConnection</span><span class="token punctuation">(</span><span class="token punctuation">{</span>   
    <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span>     
    <span class="token literal-property property">user</span><span class="token operator">:</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span>     
    <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>     
    <span class="token literal-property property">database</span><span class="token operator">:</span> <span class="token string">&#39;shop&#39;</span> 
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
db<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    
   <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>    
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Da ket noi database&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

<span class="token comment">//l\u1EC7nh exports \u0111\u1EC3 xu\u1EA5t (public) ra cho b\xEAn ngo\xE0i module c\xF3 th\u1EC3 d\xF9ng \u0111\u01B0\u1EE3c db</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> db<span class="token punctuation">;</span> 
</code></pre></div><ul><li>T\u1EA1o file models/users.js code \u0111\u1ECBnh ngh\u0129a c\xE1c h\xE0m \u0111\u1EC3 t\u01B0\u01A1ng t\xE1c v\xE0o mysql</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> db<span class="token operator">=</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./database&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
exports<span class="token punctuation">.</span><span class="token function-variable function">list</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token keyword">let</span> sql <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">SELECT *  FROM users</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
    db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> d</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">callback</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
exports<span class="token punctuation">.</span><span class="token function-variable function">create</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> callback</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//h\xE0m ch\xE8n user m\u1EDBi v\xE0o table </span>
    <span class="token keyword">let</span> sql <span class="token operator">=</span> <span class="token string">&#39;INSERT INTO users SET ?&#39;</span><span class="token punctuation">;</span>
    db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> d</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">callback</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token punctuation">}</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span>    
<span class="token punctuation">}</span> 
exports<span class="token punctuation">.</span><span class="token function-variable function">update</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">id<span class="token punctuation">,</span> data<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> 
    <span class="token keyword">let</span> sql <span class="token operator">=</span> <span class="token string">&#39;UPDATE users  SET ? WHERE idUser = ?&#39;</span><span class="token punctuation">;</span>
    db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token punctuation">[</span>data<span class="token punctuation">,</span> id<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
        <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    
<span class="token punctuation">}</span> 
exports<span class="token punctuation">.</span><span class="token function-variable function">read</span><span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">id<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> sql <span class="token operator">=</span> <span class="token string">&#39;SELECT * FROM users WHERE idUser = ?&#39;</span>    
    db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> id<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> d</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        data <span class="token operator">=</span> d<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
        <span class="token function">callback</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> 
</code></pre></div><h3 id="_5-tao-controller" tabindex="-1"><a class="header-anchor" href="#_5-tao-controller" aria-hidden="true">#</a> 5. T\u1EA1o controller</h3><ul><li><p>M\u1EDF file app.js, b\u1EA1n s\u1EBD th\u1EA5y l\u1EC7nh app.use(\u2018/users\u2018, usersRouter); . \u0110\u01B0\u1EDDng route users \u0111\xE3 \u0111\u01B0\u1EE3c express t\u1EA1o s\u1EB5n cho b\u1EA1n d\u1EABn v\xE0o router(controller) users. C\u1EE9 \u0111\u1EC3 v\u1EADy kh\u1ECFi t\u1EA1o n\u1EEFa (nh\u01B0ng n\u1EBFu mu\u1ED1n c\xF3 th\u1EC3 s\u1EEDa ho\u1EB7c t\u1EA1o m\u1EDBi)</p></li><li><p>M\u1EDF file routes/users.js v\xE0 code:</p></li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> router <span class="token operator">=</span> express<span class="token punctuation">.</span><span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> db <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./../models/database&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> modelUsers <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./../models/users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> 
    modelUsers<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">listusers</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span>listusers<span class="token punctuation">)</span><span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> data <span class="token operator">=</span> req<span class="token punctuation">.</span>body<span class="token punctuation">;</span> 
	  modelUsers<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>data <span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">thongbao</span><span class="token operator">:</span><span class="token string">&quot;\u0110\xE3 th\xEAm  xong m\u1ED9t user m\u1EDBi&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/:id&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> id <span class="token operator">=</span> req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id<span class="token punctuation">;</span>    
    modelUsers<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">u</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 router<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&#39;/:id&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> data <span class="token operator">=</span> req<span class="token punctuation">.</span>body<span class="token punctuation">;</span>
      <span class="token keyword">let</span> id <span class="token operator">=</span> req<span class="token punctuation">.</span>params<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
      modelUsers<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> data<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">thongbao</span><span class="token operator">:</span> <span class="token string">&#39;\u0110\xE3 c\u1EADp nh\u1EADt user &#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
 <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 module<span class="token punctuation">.</span>exports <span class="token operator">=</span> router<span class="token punctuation">;</span>
</code></pre></div><p>Test: D\xF9ng postman \u0111\u1EC3 th\u1EF1c hi\u1EC7n test : xem danh s\xE1ch user, xem chi ti\u1EBFt 1 user, th\xEAm 1 user , c\u1EADp nh\u1EADt 1 user. T\u1EA5t c\u1EA3 ph\u1EA3i th\xE0nh c\xF4ng nh\xE9.</p><p>Vi\u1EC7c chu\u1EA9n b\u1ECB \u0111\xE3 xong. Gi\u1EDD th\xEC g\u1ECDi n\xF3 trong trang web th\u1EBF n\xE0o? M\u1EDDi b\u1EA1n xem ti\u1EBFp \u0111\u1EC3 bi\u1EBFt s\u1EED d\u1EE5ng Restful API NodeJS.</p><h2 id="dung-ham-fetch-\u0111e-goi-api" tabindex="-1"><a class="header-anchor" href="#dung-ham-fetch-\u0111e-goi-api" aria-hidden="true">#</a> D\xF9ng h\xE0m fetch() \u0111\u1EC3 g\u1ECDi API</h2><p>Trong Javascript, h\xE0m <code>fetch(url,options)</code> l\xE0 m\u1ED9t h\xE0m d\xF9ng \u0111\u1EC3 g\u1EEDi v\xE0 nh\u1EADn request \u0111\u1EBFn t\xE0i nguy\xEAn \u1EDF xa. B\u1EA1n d\xF9ng h\xE0m n\xE0y \u0111\u1EC3 th\u1EF1c hi\u1EC7n g\u1ECDi c\xE1c API \u0111\xE3 t\u1EA1o</p><h3 id="tao-request-voi-method-get" tabindex="-1"><a class="header-anchor" href="#tao-request-voi-method-get" aria-hidden="true">#</a> T\u1EA1o request v\u1EDBi method get</h3><p>D\u01B0\u1EDBi \u0111\xE2y l\xE0 c\u1EA5u tr\xFAc c\u01A1 b\u1EA3n c\u1EE7a h\xE0m fetch \u0111\u1EC3 g\u1ECDi 1 t\xE0i nguy\xEAn \u1EDF xa v\u1EDBi method get. N\u1EBFu khi request m\xE0 c\xF3 l\u1ED7i g\xEC \u0111\xF3 th\xEC ph\u1EA7n .catch s\u1EBD ch\u1EA1y. C\xF2n k\u1EBFt qu\u1EA3 t\u1EEB server s\u1EBD truy\u1EC1n t\u1EDBi .then trong bi\u1EBFn response, B\u1EA1n s\u1EED d\u1EE5ng bi\u1EBFn response n\xE0y \u0111\u1EC3 \u0111\xE1nh gi\xE1 k\u1EBFt qu\u1EA3 tr\u1EA3 v\u1EC1 c\xF3 ok kh\xF4ng r\u1ED3i chuy\u1EC3n n\xF3 th\xE0nh c\xE1c d\u1EA1ng d\u1EEF li\u1EC7u c\u1EA7n thi\u1EBFt \u0111\u1EC3 x\u1EED l\xFD \u1EDF c\xE1c .then sau</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;http://\u2026&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u0111\xE1nh gi\xE1 response v\xE0 chuy\u1EC3n d\u1EEF li\u1EC7u cho .then sau</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// x\u1EED l\xFD d\u1EEF li\u1EC7u v\xE0 chuy\u1EC3n d\u1EEF li\u1EC7u cho .then sau</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// x\u1EED l\xFD d\u1EEF li\u1EC7u </span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Co loi : \\n&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h4 id="vi-du-1-goi-ham-api" tabindex="-1"><a class="header-anchor" href="#vi-du-1-goi-ham-api" aria-hidden="true">#</a> V\xED d\u1EE5 1: G\u1ECDi h\xE0m API</h4><p><strong>1. T\u1EA1o route: M\u1EDF routes/index.js v\xE0 code</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/danhsachuser&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&quot;listusers&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>2. T\u1EA1o views/listusers.ejs</strong></p><div class="language-ejs ext-ejs"><pre class="language-ejs"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Danh s\xE1ch users<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p><strong>3. Test: Ch\u1EA1y project (npm start) r\u1ED3i m\u1EDF tr\xECnh duy\u1EC7t g\xF5 http://localhost:3000/danhsachuser , n\u1EBFu th\u1EA5y ch\u1EEF Danh s\xE1ch users l\xE0 OK</strong></p><p><strong>4. Code g\u1ECDi API trong views m\u1EDBi t\u1EA1o (sau tag h1)</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script<span class="token operator">&gt;</span> 
<span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:3000/users/&quot;</span><span class="token punctuation">)</span>  
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//xem th\u1EED trong console c\u1EE7a tr\xECnh duy\u1EC7t nh\xE9</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>res<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;L\u1ED7i = &quot;</span> <span class="token operator">+</span> res<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//hi\u1EC7n data ra web (d\xF9ng foreach)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span> 
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;L\u1ED7i: &quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre></div><p>Xem l\u1EA1i th\u1EED trang http://localhost:3000/danhsachuser , s\u1EBD th\u1EA5y trong console</p><p><img src="https://github.com/dangtranhuu/images/blob/main/angurvad/nodejs/session6/vidu-1-goi-api.png?raw=true" alt="object-class-diagrame-1.png"></p><p><strong>5. Hi\u1EC7n d\u1EEF li\u1EC7u danh s\xE1ch userra web</strong></p><ul><li><p>Trong trang listuser.ejs (sau h1) , t\u1EA1o div <code>&lt;div id=\u201Dlistuser\u201D&gt;&lt;/div&gt;</code> \u0111\u1EC3 ch\u1EE9a k\u1EBFt qu\u1EA3 danh s\xE1ch user</p></li><li><p>Code t\u1EA1i v\u1ECB tr\xED hi\u1EC7n data ra web \u1EDF tr\xEAn:</p></li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">let</span> kq <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;listuser&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span> <span class="token parameter">u</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
   kq<span class="token punctuation">.</span>innerHTML<span class="token operator">+=</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&lt;p&gt;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>u<span class="token punctuation">.</span>ho<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>u<span class="token punctuation">.</span>ten<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/p&gt;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>Xem th\u1EED k\u1EBFt qu\u1EA3: http://localhost:3000/danhsachuser , s\u1EBD th\u1EA5y k\u1EBFt qu\u1EA3, \u0111\u1ECBnh d\u1EA1ng th\xEAm cho \u0111\u1EB9p nh\xE9.</p><p><img src="https://github.com/dangtranhuu/images/blob/main/angurvad/nodejs/session6/ket-qua-request-api-doc-array-json.png?raw=true" alt="object-class-diagrame-1.png"></p><h3 id="\u0111oc-du-lieu-tu-1-object-json" tabindex="-1"><a class="header-anchor" href="#\u0111oc-du-lieu-tu-1-object-json" aria-hidden="true">#</a> \u0110\u1ECDc d\u1EEF li\u1EC7u t\u1EEB 1 object json</h3><p>Object d\u1EEF li\u1EC7u json \u0111\u1ED5 v\u1EC1 t\u1EEB server l\xE0 d\u1EEF li\u1EC7u d\u1EA1ng text c\xF3 c\u1EA5u tr\xFAc , \u0111\u01B0\u1EE3c tr\xECnh duy\u1EC7t h\u1ED7 tr\u1EE3 n\xEAn r\u1EA5t d\u1EC5 \u0111\u1ECDc.</p><p>B\u1EA1n h\xE3y th\u1EED: D\xF9ng tr\xECnh duy\u1EC7t xem API http://localhost:3000/users/1 s\u1EBD th\u1EA5y chi ti\u1EBFt user 1 \u1EDF d\u1EA1ng json. Request API r\u1ED3i hi\u1EC7n ra r\u1EA5t d\u1EC5 d\xE0ng</p><p><strong>1. T\u1EA1o route: M\u1EDF routes/index.js v\xE0 code</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/chitietuser&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&quot;chitietuser&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>2. T\u1EA1o views/chitietuser.ejs</strong></p><div class="language-ejs ext-ejs"><pre class="language-ejs"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Chi ti\u1EBFt user<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p><strong>3. Test: Ch\u1EA1y project (npm start) r\u1ED3i m\u1EDF tr\xECnh duy\u1EC7t g\xF5 http://localhost:3000/chitietuser , n\u1EBFu th\u1EA5y ch\u1EEF Chi ti\u1EBFt user l\xE0 OK</strong></p><p><strong>4. Code g\u1ECDi API trong views m\u1EDBi t\u1EA1o (sau tag h1)</strong></p><div class="language-html ext-html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Chi ti\u1EBFt user<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>chitietuser<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"> 
    <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:3000/users/1&quot;</span><span class="token punctuation">)</span>  
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>res<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;L\u1ED7i = &quot;</span> <span class="token operator">+</span> res<span class="token punctuation">.</span>status<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> str<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        str<span class="token operator">+=</span> <span class="token string">&quot;&lt;p&gt;Username: &quot;</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>username<span class="token operator">+</span><span class="token string">&quot;&lt;/p&gt;&quot;</span><span class="token punctuation">;</span>
        str<span class="token operator">+=</span> <span class="token string">&quot;&lt;p&gt;H\u1ECD: &quot;</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>ho <span class="token operator">+</span> <span class="token string">&quot;&lt;/p&gt;&quot;</span><span class="token punctuation">;</span>
        str<span class="token operator">+=</span> <span class="token string">&quot;&lt;p&gt;T\xEAn: &quot;</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>ten <span class="token operator">+</span> <span class="token string">&quot;&lt;/p&gt;&quot;</span><span class="token punctuation">;</span>
        str<span class="token operator">+=</span> <span class="token string">&quot;&lt;p&gt;T\u1EC9nh: &quot;</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>tinh <span class="token operator">+</span> <span class="token string">&quot;&lt;/p&gt;&quot;</span><span class="token punctuation">;</span>
        str<span class="token operator">+=</span> <span class="token string">&quot;&lt;p&gt;Email: &quot;</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>email <span class="token operator">+</span> <span class="token string">&quot;&lt;/p&gt;&quot;</span><span class="token punctuation">;</span>
        str<span class="token operator">+=</span> <span class="token string">&quot;&lt;p&gt;S\u1EDF th\xEDch: &lt;br&gt;&quot;</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>sothich <span class="token operator">+</span> <span class="token string">&quot;&lt;/p&gt;&quot;</span><span class="token punctuation">;</span>
        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;chitietuser&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML<span class="token operator">=</span>str<span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span>  <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;L\u1ED7i: &quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>K\u1EBFt qu\u1EA3 b\u1EA1n s\u1EBD th\u1EA5y d\u1EEF li\u1EC7u th\xE2n thi\u1EC7n , theo c\xE1ch b\u1EA1n mu\u1ED1n tr\xECnh b\xE0y cho user xem.</p><p><img src="https://github.com/dangtranhuu/images/blob/main/angurvad/nodejs/session6/ket-qua-request-api-doc-array-json.png?raw=true" alt="object-class-diagrame-1.png"></p><h3 id="goi-api-voi-method-post" tabindex="-1"><a class="header-anchor" href="#goi-api-voi-method-post" aria-hidden="true">#</a> G\u1ECDi API v\u1EDBi method POST</h3><p>H\xE0m fetch(url,options) gi\xFAp g\u1EEDi request \u0111\u1EBFn t\xE0i nguy\xEAn \u1EDF xa, trong \u0111\xF3 options l\xE0 c\xE1c c\u1EA5u h\xECnh chi ti\u1EBFt cho h\xE0m. C\xE1ch s\u1EED d\u1EE5ng th\u1EC3 hi\u1EC7n qua v\xED d\u1EE5 sau:</p><ul><li>File routes/index.js</li></ul><div class="language-javascript ext-js"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/dangky&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&quot;dangky&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ul><li>T\u1EA1o file views/dangky.ejs</li></ul><div class="language-html ext-html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>frmdk<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Username: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>username<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Password: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Email: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">dangky</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>\u0110\u0103ng k\xFD<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">function</span> <span class="token function">dangky</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
   <span class="token keyword">let</span> un <span class="token operator">=</span> document<span class="token punctuation">.</span>frmdk<span class="token punctuation">.</span>username<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
   <span class="token keyword">let</span> pw <span class="token operator">=</span> document<span class="token punctuation">.</span>frmdk<span class="token punctuation">.</span>password<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
   <span class="token keyword">let</span> em <span class="token operator">=</span> document<span class="token punctuation">.</span>frmdk<span class="token punctuation">.</span>email<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
   <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">username</span><span class="token operator">:</span> un<span class="token punctuation">,</span>
        <span class="token literal-property property">password</span><span class="token operator">:</span> pw<span class="token punctuation">,</span> 
        <span class="token literal-property property">email</span><span class="token operator">:</span>em
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> url <span class="token operator">=</span><span class="token string">&quot;http://localhost:3000/users/&quot;</span><span class="token punctuation">;</span>
    <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;Content-type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application/json; charset=UTF-8&quot;</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
    <span class="token punctuation">.</span><span class="token function">then</span> <span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        document<span class="token punctuation">.</span>frmdk<span class="token punctuation">.</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><ul><li>Test: http://localhost:3000/dangky ==&gt; nh\u1EADp th\xF4ng tin r\u1ED3i nh\u1EAFp \u0110\u0103ng k\xFD s\u1EBD l\u01B0u th\xE0nh c\xF4ng v\xE0o database.</li></ul><h2 id="su-dung-thu-vien-axios" tabindex="-1"><a class="header-anchor" href="#su-dung-thu-vien-axios" aria-hidden="true">#</a> S\u1EED d\u1EE5ng th\u01B0 vi\u1EC7n Axios</h2><p>Axios l\xE0 m\u1ED9t th\u01B0 vi\u1EC7n gi\xFAp b\u1EA1n g\u1EEDi http request \u0111\u1EBFn c\xE1c \u1EE9ng d\u1EE5ng API. Axios \u0111\u01B0\u1EE3c d\xF9ng c\u1EA3 \u1EDF tr\xECnh duy\u1EC7t hay Node.js. S\u1EED d\u1EE5ng Restful API NodeJS s\u1EBD d\u1EC5 h\u01A1n v\u1EDBi th\u01B0 vi\u1EC7n n\xE0y.</p><h3 id="cai-\u0111at-axios" tabindex="-1"><a class="header-anchor" href="#cai-\u0111at-axios" aria-hidden="true">#</a> C\xE0i \u0111\u1EB7t axios</h3><p>C\xE0i Axios trong NodeJS \u0111\u01A1n gi\u1EA3n nh\u01B0 b\u1EA1n \u0111\xE3 bi\u1EBFt:</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> axios
</code></pre></div><p>Trong trang html, nh\xFAng axios:</p><div class="language-html ext-html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span> \u201Chttps://unpkg.com/axios/dist/axios.min.js\u201D</span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>T\u1EA1o m\u1ED9t request v\u1EDBi Axios</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/login&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">user</span><span class="token operator">:</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">&#39;test1&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>Th\u1EF1c hi\u1EC7n request v\u1EDBi ph\u01B0\u01A1ng th\u1EE9c <strong>GET</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code>axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
 <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>Th\u1EF1c hi\u1EC7n request v\u1EDBi ph\u01B0\u01A1ng th\u1EE9c <strong>POST</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code>axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">&#39;First name&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">&#39;Last name&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>C\xE1c alias t\u1EA1o request t\u01B0\u01A1ng \u1EE9ng v\u1EDBi c\xE1c http method</p><ul><li>axios.request(config)</li><li>axios.get(url[, config])</li><li>axios.delete(url[, config])</li><li>axios.head(url[, config])</li><li>axios.options(url[, config])</li><li>axios.post(url[, data[, config]])</li><li>axios.put(url[, data[, config]])</li><li>axios.patch(url[, data[, config]])</li></ul><p>C\u1EA5u tr\xFAc c\u1EE7a d\u1EEF li\u1EC7u tr\u1EA3 v\u1EC1 C\u1EA5u tr\xFAc c\u1EE7a response tr\u1EA3 v\u1EC1 t\u1EEB server bao g\u1ED3m c\xE1c th\xF4ng tin:</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// d\u1EEF li\u1EC7u tr\u1EA3 v\u1EC1 t\u1EEB server</span>
    <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>   <span class="token comment">// m\xE3 HTTP status tr\u1EA3 v\u1EC1 t\u1EEB server</span>
    <span class="token literal-property property">statusText</span><span class="token operator">:</span> <span class="token string">&#39;OK&#39;</span><span class="token punctuation">,</span>   <span class="token comment">// text m\xF4 t\u1EA3 status t\u1EEB server</span>
    <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>   <span class="token comment">// c\xE1c header m\xE0 server ph\u1EA3n h\u1ED3i</span>
    <span class="token literal-property property">config</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>   <span class="token comment">// c\xE1c c\u1EA5u h\xECnh khi th\u1EF1c hi\u1EC7n request</span>
    <span class="token literal-property property">request</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token comment">// l\xE0 request th\u1EF1c hi\u1EC7n \u0111\u1EC3 nh\u1EADn \u0111\u01B0\u1EE3c response n\xE0y</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="vi-du-su-dung-axios" tabindex="-1"><a class="header-anchor" href="#vi-du-su-dung-axios" aria-hidden="true">#</a> V\xED d\u1EE5 s\u1EED d\u1EE5ng axios</h2><p><strong>1. file routes/index.js</strong></p><div class="language-javascript ext-js"><pre class="language-javascript"><code> router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/ax1&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">&quot;ax1_listusers&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>2. T\u1EA1o file views/ax1_listusers.ejs</strong></p><div class="language-html ext-html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://unpkg.com/axios/dist/axios.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>listuser<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
 <span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">&quot;http://localhost:3000/users/&quot;</span><span class="token punctuation">;</span>
 axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// console.log(response);</span>
    <span class="token keyword">let</span> str<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token keyword">in</span> response<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> motuser <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>motuser<span class="token punctuation">)</span><span class="token punctuation">;</span>
        str <span class="token operator">+=</span>  <span class="token string">&quot;&lt;p&gt;&quot;</span><span class="token operator">+</span>  motuser<span class="token punctuation">.</span>ho <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> motuser<span class="token punctuation">.</span>ten  <span class="token operator">+</span><span class="token string">&quot;&lt;/p&gt;&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token comment">//for    </span>
    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;listuser&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">+=</span> str<span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p><strong>3. Test: http://localhost:3000/ax1 , s\u1EBD th\u1EA5y danh s\xE1ch users</strong></p><p><strong>Luy\u1EC7n t\u1EADp: M\u1EDDi b\u1EA1n th\u1EF1c hi\u1EC7n luy\u1EC7n t\u1EADp nh\xE9:</strong></p><ul><li><p>B\xE0i 1: T\u1EA1o form \u0111\u0103ng k\xFD, khi nh\u1EAFp v\xE0o s\u1EBD l\u01B0u v\xE0o database. \u0110\u1ECBnh d\u1EA1ng form cho \u0111\u1EB9p nh\xE9</p></li><li><p>B\xE0i 2: T\u1EA1o trang xem chi ti\u1EBFt user c\xF3 id l\xE0 1. Sau \u0111\xF3 c\u1EA3i ti\u1EBFn th\xEAm: l\u1EA5y id c\u1EE7a user t\u1EEB \u0111\u1ECBa ch\u1EC9 \u0111\u1EC3 hi\u1EC7n th\xF4ng tin c\u1EE7a user \u0111\xF3 trong trang. (\u0110\u1ECBnh d\u1EA1ng cho \u0111\u1EB9p nh\xE9)</p></li><li><p>B\xE0i 3: T\u1EA1o form c\u1EADp nh\u1EADt user v\u1EDBi id user l\xE0 1, khi nh\u1EAFp v\xE0o s\u1EBD c\u1EADp nh\u1EADt v\xE0o database</p></li><li><p>B\xE0i 4: T\u1EA1o trang hi\u1EC7n danh s\xE1ch users</p></li></ul>`,91),c=[o];function e(u,l){return s(),a("div",null,c)}var k=n(p,[["render",e],["__file","session6.html.vue"]]);export{k as default};
