import{_ as e,r as c,o as u,c as l,d as s,e as n,a as t,w as p,b as o}from"./app.be380e2e.js";const i={},k=s("p",null,[s("a",{href:""},"JWT"),n(" l\xE0 m\u1ED9t h\xECnh th\u1EE9c x\xE1c th\u1EF1c ng\u01B0\u1EDDi d\xF9ng r\u1EA5t b\u1EA3o m\u1EADt, hi\u1EC7u qu\u1EA3 v\xE0 ph\u1ED5 bi\u1EBFn trong m\xF4 h\xECnh"),s("a",{href:""},"CSR")],-1),r=s("p",null,[s("img",{src:"https://github.com/dangtranhuu/images/blob/main/frogcyber/post/jwtnodejs/1.png?raw=true",alt:""})],-1),d=s("a",{href:"https://github.com/Theanishtar/Rainbow-Flix",target:"_blank",rel:"noopener noreferrer"},"\u0111\xE2y",-1),g=s("p",null,[n("Trong \u0111\xF3 c\xF3 ch\u1EE9c n\u0103ng X\xE1c th\u1EF1c b\u1EB1ng "),s("strong",null,"JWT"),n(),s("em",null,"(Json Web Token)"),n(", m\xECnh s\u1EBD c\xF9ng t\xECm hi\u1EC3u trong b\xE0i vi\u1EBFt h\xF4m nay nh\xE9!!!")],-1),h=s("p",null,"M\xECnh c\xF3 m\u1ED9t s\u1ED1 l\u01B0u \xFD sau \u0111\xE2y:",-1),m=s("a",{href:""},"JWT",-1),y=s("li",null,"B\xE0i vi\u1EBFt n\xE0y \u0111\u01B0\u1EE3c m\xECnh l\u1EA5y tr\u1EF1c ti\u1EBFp t\u1EEB d\u1EF1 \xE1n \u0111\xE3 x\xE2y d\u1EF1ng n\xEAn c\xF3 g\xEC ch\u01B0a hi\u1EC3u b\u1EA1n h\xE3y xem m\xE3 ngu\u1ED3n c\u1EE7a d\u1EF1 \xE1n nh\xE9",-1),b=o('<p>Okay b\u1EAFt \u0111\u1EA7u thoy !!!</p><details class="custom-container details"><summary><b>N\u1ED9i dung ch\xEDnh</b></summary><p><img src="https://github.com/dangtranhuu/images/blob/main/frogcyber/post/jwtnodejs/cont/2.png?raw=true" alt="Nguy\xEAn l\xFD"><img src="https://github.com/dangtranhuu/images/blob/main/frogcyber/post/jwtnodejs/cont/3.png?raw=true" alt="Th\xE0nh ph\u1EA7n"><img src="https://github.com/dangtranhuu/images/blob/main/frogcyber/post/jwtnodejs/cont/4.png?raw=truee" alt="T\xEDnh ch\u1EA5t l\u1EF1a "><img src="https://github.com/dangtranhuu/images/blob/main/frogcyber/post/jwtnodejs/cont/5.png?raw=true" alt="\u01AFu \u0111i\u1EC3m"><img src="https://github.com/dangtranhuu/images/blob/main/frogcyber/post/jwtnodejs/cont/6.png?raw=true" alt="Nh\u01B0\u1EE3c \u0111i\u1EC3m"><img src="https://github.com/dangtranhuu/images/blob/main/frogcyber/post/jwtnodejs/cont/7.png?raw=true" alt="B\xE0i t\u1EADp"><img src="https://github.com/dangtranhuu/images/blob/main/frogcyber/post/jwtnodejs/cont/8.png?raw=true" alt="B\xE0i gi\u1EA3i"></p></details><h2 id="xay-dung-csdl" tabindex="-1"><a class="header-anchor" href="#xay-dung-csdl" aria-hidden="true">#</a> X\xE2y d\u1EF1ng CSDL</h2><p><img src="https://github.com/dangtranhuu/images/raw/main/rainbow-flix/djagram-rolesuser.png?raw=true" alt="Diagram DB"></p><p>Nh\u01B0 b\u1EA1n th\u1EA5y \u1EDF h\xECnh tr\xEAn ta c\u1EA7n 3 Table ch\xEDnh li\xEAn quan \u0111\u1EBFn ng\u01B0\u1EDDi d\xF9ng g\u1ED3m: <strong>User</strong> hay <strong>Account</strong>, <strong>Roles</strong> v\xE0 <strong>UserRole</strong>.</p><details class="custom-container details"><summary><b>Chi ti\u1EBFt:</b></summary><p><strong>User</strong>: ch\u1EE9a danh s\xE1ch ng\u01B0\u1EDDi d\xF9ng</p><p><strong>Roles</strong>: ch\u1EE9a t\u1EA5t c\u1EA3 c\xE1c quy\u1EC1n trong h\u1EC7 th\u1ED1ng</p><p><strong>UserRole</strong>: b\u1EA3ng trung gian li\xEAn k\u1EBFt N-N trong h\u1EC7 th\u1ED1ng</p></details><h3 id="ma-nguon-my-sql" tabindex="-1"><a class="header-anchor" href="#ma-nguon-my-sql" aria-hidden="true">#</a> M\xE3 ngu\u1ED3n My-SQL</h3><h4 id="account" tabindex="-1"><a class="header-anchor" href="#account" aria-hidden="true">#</a> Account</h4><div class="language-sql ext-sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>account<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n  <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>username<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>fullname<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>password<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>email<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>image<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>role<span class="token punctuation">`</span></span> <span class="token keyword">bit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>liked<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>shares<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>isActive<span class="token punctuation">`</span></span> <span class="token keyword">bit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>\n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4 <span class="token keyword">COLLATE</span><span class="token operator">=</span>utf8mb4_general_ci<span class="token punctuation">;</span>\n\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>account<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>username<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>fullname<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>password<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>email<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>image<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>role<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>liked<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>shares<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>isActive<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span>\n<span class="token punctuation">(</span><span class="token string">&#39;dangth&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Tr\u1EA7n H\u1EEFu \u0110ang&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;9999&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dangtt135@gmail.com&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dangth.png&#39;</span><span class="token punctuation">,</span> b<span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> b<span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;datnt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Nguy\u1EC5n Ti\u1EBFn \u0110\u1EA1t&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;datnt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;datnt@gmail.com&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;datnt.png&#39;</span><span class="token punctuation">,</span> b<span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> b<span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;duyenttm&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Tr\u1EA7n Th\u1ECB M\u1EF9 Duy\xEAn&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;duyenttm@gmail.com&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;duyenttm.png&#39;</span><span class="token punctuation">,</span> b<span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> b<span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;hanltn&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;L\xEA Th\u1ECB Ng\u1ECDc H\xE2n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hanltn&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hanltn@gmail.com&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hanlth.png&#39;</span><span class="token punctuation">,</span> b<span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> b<span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;nganntd&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Nguy\u1EC5n Th\u1ECB Di\u1EC5m Ng\xE2n&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ngan&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nganntd@gmail.com&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;nganntd.png&#39;</span><span class="token punctuation">,</span> b<span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> b<span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token string">&#39;phuocnhh&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Nguy\u1EC5n Ho\xE0ng H\u1EEFu Ph\u01B0\u1EDBc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;phuoc&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;phuoclhh@gmail.com&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Phuocnhh.png&#39;</span><span class="token punctuation">,</span> b<span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> b<span class="token string">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h4 id="roles" tabindex="-1"><a class="header-anchor" href="#roles" aria-hidden="true">#</a> Roles</h4><div class="language-sql ext-sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>roles<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n  <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>description<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>\n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4 <span class="token keyword">COLLATE</span><span class="token operator">=</span>utf8mb4_general_ci<span class="token punctuation">;</span>\n<span class="token comment">--------------------------------------</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>roles<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>description<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span>\n<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;ROLE_ADMIN&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Quy\u1EC1n qu\u1EA3n tr\u1ECB. Xem th\u1ED1ng k\xEA v\xE0 t\u1EA5t c\u1EA3 quy\u1EC1n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;ROLE_MANAGER&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Quy\u1EC1n qu\u1EA3n l\xFD. CRUD Video&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;ROLE_USER&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Quy\u1EC1n ng\u01B0\u1EDDi d\xF9ng. Xem, th\xEDch, comment video&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><h4 id="userrole" tabindex="-1"><a class="header-anchor" href="#userrole" aria-hidden="true">#</a> UserRole</h4><div class="language-sql ext-sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>userrole<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n  <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">int</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>username<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>roleid<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span>\n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4 <span class="token keyword">COLLATE</span><span class="token operator">=</span>utf8mb4_general_ci<span class="token punctuation">;</span>\n<span class="token comment">---------------------------</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> <span class="token identifier"><span class="token punctuation">`</span>userrole<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>username<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">`</span>roleid<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span>\n<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;dangth&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;datnt&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;duyenttm&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">&#39;hanltn&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">&#39;nganntd&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">&#39;phuocnhh&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre></div><p>Ta c\xF3 th\u1EC3 l\u1EA5y ra c\xE1c th\xF4ng tin v\xE0 quy\u1EC1n c\u1EE7a m\u1ED9t <strong>User</strong> \u1EE9ng v\u1EDBi <code>email</code> v\xE0 <code>password</code> b\u1EB1ng c\xE2u truy v\u1EA5n sau:</p><div class="language-sql ext-sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> \n	u<span class="token punctuation">.</span>fullname<span class="token punctuation">,</span> u<span class="token punctuation">.</span>email<span class="token punctuation">,</span> GROUP_CONCAT<span class="token punctuation">(</span>r<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token keyword">AS</span> roles\n<span class="token keyword">FROM</span> roles r\n<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> \n	userrole ur <span class="token keyword">ON</span> r<span class="token punctuation">.</span>id <span class="token operator">=</span> ur<span class="token punctuation">.</span>roleid\n<span class="token keyword">INNER</span> <span class="token keyword">JOIN</span> \n	account u <span class="token keyword">ON</span> ur<span class="token punctuation">.</span>username <span class="token operator">like</span> u<span class="token punctuation">.</span>username\n<span class="token keyword">WHERE</span> \n	u<span class="token punctuation">.</span>email <span class="token operator">like</span> <span class="token string">&#39;${email}&#39;</span> <span class="token operator">and</span> u<span class="token punctuation">.</span>password <span class="token operator">like</span> <span class="token string">&#39;${password}&#39;</span> \n<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> u<span class="token punctuation">.</span>email<span class="token punctuation">;</span>\n</code></pre></div><p>K\u1EBFt qu\u1EA3:</p><table><thead><tr><th>Fullname</th><th>Email</th><th>Roles</th></tr></thead><tbody><tr><td>Tr\u1EA7n H\u1EEFu \u0110ang</td><td>dangtt135@gmail.com</td><td>ROLE_ADMIN, ROLE_MANAGER</td></tr><tr><td>Frog Dev</td><td>frogdev@gmail.com</td><td>ROLE_USER</td></tr><tr><td>Nguy\u1EC5n Nh\xE2n Vi\xEAn</td><td>viennn@gmail.com</td><td>ROLE_STAFF</td></tr></tbody></table><h2 id="tao-du-an" tabindex="-1"><a class="header-anchor" href="#tao-du-an" aria-hidden="true">#</a> T\u1EA1o d\u1EF1 \xE1n</h2><h3 id="tao-du-an-voi-express" tabindex="-1"><a class="header-anchor" href="#tao-du-an-voi-express" aria-hidden="true">#</a> T\u1EA1o d\u1EF1 \xE1n v\u1EDBi Express</h3><div class="language-cmd ext-cmd"><pre class="language-cmd"><code>npm install express --save\nnpm install express\nnpm install express-generator -g\ncd /var/www/\nexpress expressjs\ncd expressjs\nnpm install\n</code></pre></div><h3 id="cai-\u0111at-thu-vien-can-thiet" tabindex="-1"><a class="header-anchor" href="#cai-\u0111at-thu-vien-can-thiet" aria-hidden="true">#</a> C\xE0i \u0111\u1EB7t th\u01B0 vi\u1EC7n c\u1EA7n thi\u1EBFt</h3><div class="language-cmd ext-cmd"><pre class="language-cmd"><code>npm i -save mysql	\nnpm i -save jsonwebtoken\nnpm i -save dotenv\n</code></pre></div>',22),f={class:"custom-container details"},w=s("summary",null,"Ch\xFA th\xEDch",-1),v=s("p",null,[s("strong",null,"mysql"),n(": k\u1EBFt n\u1ED1i v\xE0 truy v\u1EA5n CSDL")],-1),T=s("p",null,[s("strong",null,"jsonwebtoken"),n(": l\xE0m vi\u1EC7c v\u1EDBi Json Web Token")],-1),E=s("strong",null,"dotenv",-1),N=o(`<h2 id="lap-trinh-back-end" tabindex="-1"><a class="header-anchor" href="#lap-trinh-back-end" aria-hidden="true">#</a> L\u1EADp tr\xECnh back-end</h2><h3 id="khoi-tao-secret-key" tabindex="-1"><a class="header-anchor" href="#khoi-tao-secret-key" aria-hidden="true">#</a> Kh\u1EDFi t\u1EA1o SECRET KEY</h3><p>T\u1EA1o file <mark>.env</mark> trong package <code>server/.env</code></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token constant">ACCESS_TOKEN_SECRET</span> <span class="token operator">=</span> froggydev1210
</code></pre></div><h3 id="xay-dung-jwt-model" tabindex="-1"><a class="header-anchor" href="#xay-dung-jwt-model" aria-hidden="true">#</a> X\xE2y d\u1EF1ng JWT Model</h3><p>X\xE2y d\u1EF1ng l\u1EDBp <mark>JwtModel</mark> trong package <code>server/models/JwtModel.js</code></p>`,6),x=s("strong",null,"generateToken",-1),q=s("strong",null,"generateRefreshToken",-1),_=o(`<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> jwt <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;jsonwebtoken&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> dotent <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;dotenv&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
dotent<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">JwtModel</span> <span class="token punctuation">{</span>
	<span class="token keyword">static</span> <span class="token function">generateToken</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> jwt<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">ACCESS_TOKEN_SECRET</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">expiresIn</span><span class="token operator">:</span> time <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">static</span> <span class="token function">generateRefreshToken</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> jwt<span class="token punctuation">.</span><span class="token function">sign</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">ACCESS_TOKEN_SECRET</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">expiresIn</span><span class="token operator">:</span> time <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> JwtModel<span class="token punctuation">;</span>
</code></pre></div><ul><li><p><strong>data</strong>: l\xE0 \u0111\u1ED1i t\u01B0\u1EE3ng mu\u1ED1n kh\u1EDFi t\u1EA1o JWT</p></li><li><p><strong>p<wbr>rocess.env.ACCESS_TOKEN_SECRET</strong>: l\xE0 <code>SECRET KEY</code> c\u1EE7a JWT</p></li><li><p><strong>expiresIn</strong>: l\xE0 th\u1EDDi gian t\u1ED3n t\u1EA1i c\u1EE7a JWT</p></li></ul><h3 id="xay-dung-user-model" tabindex="-1"><a class="header-anchor" href="#xay-dung-user-model" aria-hidden="true">#</a> X\xE2y d\u1EF1ng User Model</h3><p>X\xE2y d\u1EF1ng l\u1EDBp <mark>UserModel</mark> trong package <code>server/models/UserModel.js</code></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> db <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./database&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> queryLogin <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">email<span class="token punctuation">,</span> password</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
	<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">SELECT u.fullname, u.email, GROUP_CONCAT(r.name) AS roles
	FROM roles r
	INNER JOIN userrole ur ON r.id = ur.roleid
	INNER JOIN account u ON ur.username like u.username
	WHERE u.email like &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>email<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39; and u.password like &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>password<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39; 
	GROUP BY u.email;</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">)</span>

<span class="token keyword">class</span> <span class="token class-name">UserModel</span> <span class="token punctuation">{</span>
	<span class="token keyword">static</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token parameter">user</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;getdatabase: &quot;</span> <span class="token operator">+</span> <span class="token punctuation">{</span> user <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token keyword">let</span> sql <span class="token operator">=</span> <span class="token function">queryLogin</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>email<span class="token punctuation">,</span> user<span class="token punctuation">.</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>
			db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
				<span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> UserModel<span class="token punctuation">;</span>
</code></pre></div><p>Model g\u1ED3m c\xF3:</p><ul><li>M\u1ED9t c\xE2u l\u1EC7nh <a href="">T-SQL</a> \u0111\u1EC3 truy v\u1EA5n v\u1EDBi MySQL <ul><li>Tham s\u1ED1 nh\u1EADn v\xE0o: <code>email</code> v\xE0 <code>password</code>.</li><li>D\u1EEF li\u1EC7u tr\u1EA3 v\u1EC1: <code>fullname</code>, <code>email</code> c\u1EE7a <mark>User</mark> v\xE0 m\u1ED9t m\u1EA3ng t\u1EADp h\u1EE3p c\xE1c <code>role</code> c\u1EE7a <mark>User</mark> \u0111\xF3.</li></ul></li><li>M\u1ED9t h\xE0m <code>login</code> \u0111\u1EC3 \u0111\u0103ng nh\u1EADp, h\xE0m s\u1EBD g\u1ECDi t\u1EDBi c\xE2u truy v\u1EA5n \u1EDF tr\xEAn v\xE0 tr\u1EA3 v\u1EC1 c\u1EA3 \u0111\u1ED1i t\u01B0\u1EE3ng <mark>User</mark> n\u1EBFu c\xF3 t\u1ED3n t\u1EA1i trong Database.</li></ul><h3 id="xay-dung-user-controller" tabindex="-1"><a class="header-anchor" href="#xay-dung-user-controller" aria-hidden="true">#</a> X\xE2y d\u1EF1ng User Controller</h3><p>T\u1EA1o l\u1EDBp <mark>UserController</mark> trong pakage <code>server/controllers/UserController.js</code></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> UserModel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../models/userModel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> jwtModel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../models/jwtModel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">UserController</span> <span class="token punctuation">{</span>
	<span class="token keyword">static</span> <span class="token keyword">async</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token keyword">await</span> UserModel<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">return</span> res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token string">&#39;User not found&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">let</span> userRes <span class="token operator">=</span> <span class="token punctuation">{</span>
				<span class="token literal-property property">email</span><span class="token operator">:</span> user<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>email<span class="token punctuation">,</span>
				<span class="token literal-property property">roles</span><span class="token operator">:</span> user<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>roles<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span> 
				<span class="token comment">// &quot;ROLE_ADMIN,ROLE_USER&quot; -&gt; [&quot;ROLE_ADMIN&quot;, &quot;ROLE_USER&quot;]</span>
			<span class="token punctuation">}</span>
			console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>userRes<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">const</span> accessToken <span class="token operator">=</span> jwtModel<span class="token punctuation">.</span><span class="token function">generateToken</span><span class="token punctuation">(</span>userRes<span class="token punctuation">,</span> <span class="token string">&#39;5h&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">const</span> refreshToken <span class="token operator">=</span> jwtModel<span class="token punctuation">.</span><span class="token function">generateRefreshToken</span><span class="token punctuation">(</span>userRes<span class="token punctuation">,</span> <span class="token string">&#39;10h&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">let</span> resp <span class="token operator">=</span> <span class="token punctuation">{</span>
				<span class="token literal-property property">fullname</span><span class="token operator">:</span> user<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>fullname<span class="token punctuation">,</span>
				<span class="token literal-property property">token</span><span class="token operator">:</span> accessToken<span class="token punctuation">,</span>
				<span class="token literal-property property">refreshToken</span><span class="token operator">:</span> refreshToken
			<span class="token punctuation">}</span>
			res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span>resp<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
			res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token string">&#39;Internal server error&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> UserController<span class="token punctuation">;</span>
</code></pre></div><p>Vi\u1EBFt h\xE0m <code>login</code> \u0111\u1EC3 th\u1EF1c hi\u1EC7n login khi c\xF3 Request \u0111\u01B0a t\u1EDBi</p><h3 id="xay-dung-router-login" tabindex="-1"><a class="header-anchor" href="#xay-dung-router-login" aria-hidden="true">#</a> X\xE2y d\u1EF1ng Router Login</h3><p>T\u1EA1o l\u1EDBp login trong package <code>server/routes/login.js</code> \u0111\u1EC3 b\u1EAFt Request c\xF3 url l\xE0 <a href="http://localhost:8080/login/token" target="_blank" rel="noopener noreferrer">http://localhost:8080/login/token</a></p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">var</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> router <span class="token operator">=</span> express<span class="token punctuation">.</span><span class="token function">Router</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> loginCtrl <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../controllers/UserController&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/* GET users listing. */</span>
router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> loginCtrl<span class="token punctuation">.</span>getUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/* 
	RETURN: Token when login success
	{
		fullname: Tran Huu Dang
		token: eyhsujbjsv...nsje
		refreshToken: eyvkdnrks...jujee
	}
*/</span>
router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	loginCtrl<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


module<span class="token punctuation">.</span>exports <span class="token operator">=</span> router<span class="token punctuation">;</span>
</code></pre></div><h2 id="lap-trinh-front-end" tabindex="-1"><a class="header-anchor" href="#lap-trinh-front-end" aria-hidden="true">#</a> L\u1EADp tr\xECnh Front-end</h2><p>Trong \u1EE9ng d\u1EE5ng g\u1ED1c m\xECnh \u0111\xE3 s\u1EED d\u1EE5ng <a href=""><strong>Angular</strong></a> \u0111\u1EC3 x\xE2y d\u1EF1ng <em>(n\u1EBFu b\u1EA1n th\u1EA5y n\xF3 \u0111\u01B0\u1EE3c vi\u1EBFt b\u1EB1ng <a href=""><strong>AngularJS</strong></a> th\xEC ngh\u0129a l\xE0 b\u1EA3n c\u0169 nh\xE9)</em></p>`,16),j=o(`<h3 id="xay-dung-form-\u0111ang-nhap" tabindex="-1"><a class="header-anchor" href="#xay-dung-form-\u0111ang-nhap" aria-hidden="true">#</a> X\xE2y d\u1EF1ng form \u0111\u0103ng nh\u1EADp</h3><div class="language-html ext-html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>loginForm<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	\u0110\u0102NG NH\u1EACP

	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>email<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Email<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>password<span class="token punctuation">&quot;</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>M\u1EADt kh\u1EA9u<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>login100-form-btn<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
		\u0110\u0103ng nh\u1EADp
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h3 id="xay-dung-ham-call-api-bang-jquery" tabindex="-1"><a class="header-anchor" href="#xay-dung-ham-call-api-bang-jquery" aria-hidden="true">#</a> X\xE2y d\u1EF1ng h\xE0m call API b\u1EB1ng JQuery</h3><p>M\xECnh \u0111\xE3 x\xE2y d\u1EF1ng server ch\u1EA1y t\u1EA1i localhost v\xE0 port 3000, b\u1EA1n c\xF3 th\u1EC3 t\xF9y ch\u1EC9nh cho ph\xF9 h\u1EE3p nh\xE9</p><p>Ta s\u1EBD l\u01B0u <mark>Token</mark> v\xE0o localstorage \u0111\u1EC3 truy\u1EC1n v\xE0o header c\u1EE7a c\xE1c <mark>Request</mark> sau nh\xE9</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">function</span> <span class="token function">delay</span><span class="token punctuation">(</span><span class="token parameter">ms</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> ms<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	<span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;#loginForm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Ng\u0103n chuy\u1EC3n h\u01B0\u1EDBng m\u1EB7c \u0111\u1ECBnh c\u1EE7a form</span>

		<span class="token keyword">var</span> formData <span class="token operator">=</span> <span class="token punctuation">{</span>
			<span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;input[name=&#39;email&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">&quot;input[name=&#39;password&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span><span class="token punctuation">;</span>

		$<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
			<span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://localhost:3000/login&#39;</span><span class="token punctuation">,</span>
			<span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span>
			<span class="token literal-property property">data</span><span class="token operator">:</span> formData<span class="token punctuation">,</span>
			<span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span>
			<span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>
				<span class="token comment">//N\xE0y l\xE0 th\xF4ng b\xE1o v\u1EDBi data n\u1EEFa c\u1EA7n l\u01B0u data th\xEC l\xE2y x\xE0i</span>
				<span class="token comment">// xu\u1EA5t thhong b\xE1o</span>
				<span class="token keyword">let</span> lastname <span class="token operator">=</span> response<span class="token punctuation">.</span>fullname<span class="token punctuation">;</span>
				<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Ch\xE0o &#39;</span> <span class="token operator">+</span> lastname<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token function">saveCookie</span><span class="token punctuation">(</span><span class="token string">&#39;fullname&#39;</span><span class="token punctuation">,</span> lastname<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>lastname<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
				localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">&#39;refreshToken&#39;</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span>refreshToken<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token comment">//Cho 2s</span>
				<span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
					<span class="token comment">// chuy\u1EC3n trang sau 2s</span>
					window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">&quot;#/main&quot;</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>

			<span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">xhr<span class="token punctuation">,</span> status<span class="token punctuation">,</span> error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// X\u1EED l\xFD l\u1ED7i</span>
				console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="chay-ung-dung" tabindex="-1"><a class="header-anchor" href="#chay-ung-dung" aria-hidden="true">#</a> Ch\u1EA1y \u1EE9ng d\u1EE5ng</h2><h3 id="chay-ung-dung-phia-back-end" tabindex="-1"><a class="header-anchor" href="#chay-ung-dung-phia-back-end" aria-hidden="true">#</a> Ch\u1EA1y \u1EE9ng d\u1EE5ng ph\xEDa back-end</h3><div class="language-javascript ext-js"><pre class="language-javascript"><code>npm start
</code></pre></div><p>Truy c\u1EADp: <a href="http://localhost:3000/" target="_blank" rel="noopener noreferrer">http://localhost:3000/</a></p><p>C\xF3 th\u1EC3 test tr\xEAn Postman <img src="https://github.com/dangtranhuu/images/raw/main/rainbow-flix/loginapi.png?raw=true" alt=""></p><h2 id="chu-thich" tabindex="-1"><a class="header-anchor" href="#chu-thich" aria-hidden="true">#</a> Ch\xFA th\xEDch</h2><h4 id="sean-app" tabindex="-1"><a class="header-anchor" href="#sean-app" aria-hidden="true">#</a> SEAN APP</h4><ul><li><strong>SEAN</strong>: \xDD n\xF3i c\xE1c \u1EE9ng d\u1EE5ng web \u0111\u01B0\u1EE3c x\xE2y d\u1EF1ng b\u1EB1ng <b style="color:green;">S</b>ql, <b style="color:green;">E</b>xpressJS, <b style="color:green;">A</b>ngular, <b style="color:green;">N</b>odejs</li></ul><h4 id="token" tabindex="-1"><a class="header-anchor" href="#token" aria-hidden="true">#</a> Token</h4><ul><li><strong>AccessToken</strong>: <em>Token</em> \u0111\xE3 \u0111\u01B0\u1EE3c x\xE1c minh</li><li><strong>RefreshToken</strong>: <em>Token</em> d\u1EF1 b\u1ECB khi n\xE0o <em>AccessToken</em> h\u1EBFt h\u1EA1n th\xEC <em>RefreshToken</em> s\u1EBD \u0111\u01B0\u1EE3c thay th\u1EBF cho <em>Token</em> c\u0169</li><li><strong>SECRET KEY</strong>: M\u1ED9t th\xE0nh ph\u1EA7n quan tr\u1ECDng \u0111\u1EC3 <em>server</em> <strong>ki\u1EC3m tra t\xEDnh h\u1EE3p l\u1EC7</strong> c\u1EE7a <em>Token</em></li></ul><h4 id="t-sql" tabindex="-1"><a class="header-anchor" href="#t-sql" aria-hidden="true">#</a> T-SQL</h4><ul><li><strong>T-SQL</strong>: m\u1ED9t <a href="">ng\xF4n ng\u1EEF l\u1EADp tr\xECnh</a> ph\xEDa <em>database</em> s\u1EED d\u1EE5ng c\xE1c c\xE2u l\u1EC7nh <strong>SQL</strong></li></ul><h4 id="front-end" tabindex="-1"><a class="header-anchor" href="#front-end" aria-hidden="true">#</a> Front-end</h4><ul><li><strong>Angular</strong>: M\u1ED9t <em>Framework</em> ph\xEDa Front-end \u0111\u01B0\u1EE3c x\xE2y d\u1EF1ng b\u1EB1ng <a href="">TypeScript</a></li><li><strong>JQuery</strong>: th\u01B0 vi\u1EC7n c\u1EE7a <strong>JavaScript</strong></li><li><strong>Ajax</strong>: l\xE0 ph\u01B0\u01A1ng th\u1EE9c trao \u0111\u1ED5i d\u1EEF li\u1EC7u v\u1EDBi m\xE1y ch\u1EE7 v\xE0 c\u1EADp nh\u1EADt m\u1ED9t hay nhi\u1EC1u ph\u1EA7n c\u1EE7a trang web, ho\xE0n to\xE0n <em>kh\xF4ng reload l\u1EA1i to\xE0n b\u1ED9 trang</em>.</li><li><strong>HTML</strong>: ng\xF4n ng\u1EEF \u0111\xE1nh d\u1EA5u, x\xE2y d\u1EF1ng website</li></ul><hr><p>Xin c\u1EA3m \u01A1n v\xEC \u0111\xE3 \u0111\u1ECDc b\xE0i vi\u1EBFt, c\xE1c b\u1EA1n c\xF3 th\u1EC3 \u0111\u1EC3 l\u1EA1i b\xECnh lu\u1EADn b\xEAn d\u01B0\u1EDBi nh\xE9</p><p>Ch\xFAc c\xE1c b\u1EA1n m\u1ED9t ng\xE0y h\u1ECDc t\u1EADp v\xE0 l\xE0m vi\u1EC7c vui v\u1EBB, t\u1ED1t l\xE0nh</p>`,23);function R(L,U){const a=c("RouterLink");return u(),l("div",null,[k,r,s("p",null,[n("Trong l\xFAc t\u1EF1 h\u1ECDc NodeJS m\xECnh \u0111\xE3 x\xE2y d\u1EF1ng m\u1ED9t "),t(a,{to:"/post/backend/jwt-nodejs/#sean-app"},{default:p(()=>[n("SEAN app")]),_:1}),n(". B\u1EA1n c\xF3 th\u1EC3 xem m\xE3 ngu\u1ED3n t\u1EA1i "),d]),g,h,s("ul",null,[s("li",null,[n("B\xE0i vi\u1EBFt h\xF4m nay ch\u1EC9 \u0111\u1EC1 c\u1EADp \u0111\u1EBFn JWT trong NodeJS n\xEAn ph\u1EA3i c\xF3 ki\u1EBFn th\u1EE9c v\u1EC1 c\u1EA3 "),m,n(" v\xE0 "),t(a,{to:"/nodejs/"},{default:p(()=>[n("NodeJS")]),_:1}),n(" nh\xE9")]),y]),b,s("details",f,[w,v,T,s("p",null,[E,n(": kh\u1EDFi t\u1EA1o bi\u1EBFn m\xF4i tr\u01B0\u1EDDng cho ph\u1EA7n "),t(a,{to:"/post/backend/jwt-nodejs/#token"},{default:p(()=>[n("SECRET KEY")]),_:1}),n(" cho Token")])]),N,s("p",null,[n("Vi\u1EBFt 2 h\xE0m l\xE0 "),x,n(" \u0111\u1EC3 t\u1EA1o ra "),t(a,{to:"/post/backend/jwt-nodejs/#token"},{default:p(()=>[n("AccessToken")]),_:1}),n(" v\xE0 "),q,n(" \u0111\u1EC3 t\u1EA1o "),t(a,{to:"/post/backend/jwt-nodejs/#token"},{default:p(()=>[n("RefreshToken")]),_:1}),n(".")]),_,s("p",null,[n("M\xECnh s\u1EBD h\u01B0\u1EDBng d\u1EABn \u0111\u01A1n gi\u1EA3n nh\u1EA5t b\u1EB1ng "),t(a,{to:"/post/backend/jwt-nodejs/#front-end"},{default:p(()=>[n("JQuery")]),_:1}),n(),t(a,{to:"/post/backend/jwt-nodejs/#front-end"},{default:p(()=>[n("ajax")]),_:1}),n(" v\xE0 "),t(a,{to:"/post/backend/jwt-nodejs/#front-end"},{default:p(()=>[n("html")]),_:1}),n(" thu\u1EA7n nh\xE9!")]),j])}var C=e(i,[["render",R],["__file","index.html.vue"]]);export{C as default};
